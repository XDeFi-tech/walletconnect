{"version":3,"file":"static/js/707.fc70fe69.chunk.js","mappings":"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pZA,IAAMiC,EAAmCha,EAAOC,KAAK,CAEnD,GACA,IACA,IACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGIga,EAAqCja,EAAOC,KAAK,CAErD,GACA,IACA,EACA,GACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,EACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EA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","sources":["../node_modules/@ethereumjs/common/src/chains/index.ts","../node_modules/@ethereumjs/common/src/eips/index.ts","../node_modules/@ethereumjs/common/src/hardforks/index.ts","../node_modules/@ethereumjs/common/src/index.ts","../node_modules/@ethereumjs/tx/src/baseTransaction.ts","../node_modules/@ethereumjs/tx/src/eip1559Transaction.ts","../node_modules/@ethereumjs/tx/src/eip2930Transaction.ts","../node_modules/@ethereumjs/tx/src/index.ts","../node_modules/@ethereumjs/tx/src/legacyTransaction.ts","../node_modules/@ethereumjs/tx/src/transactionFactory.ts","../node_modules/@ethereumjs/tx/src/types.ts","../node_modules/@ethereumjs/tx/src/util.ts","../node_modules/@metamask/eth-sig-util/src/encryption.ts","../node_modules/@metamask/eth-sig-util/src/index.ts","../node_modules/@metamask/eth-sig-util/src/personal-sign.ts","../node_modules/@metamask/eth-sig-util/src/sign-typed-data.ts","../node_modules/@metamask/eth-sig-util/src/utils.ts","../../src/account.ts","../../src/bytes.ts","../../src/constants.ts","../../src/hash.ts","../../src/index.ts","../../src/object.ts","../../src/secp256k1v3-adapter.ts","../../../src/secp256k1v3-lib/der.ts","../../../src/secp256k1v3-lib/index.ts","../../src/signature.ts","../node_modules/@web3auth/ethereum-provider/node_modules/bignumber.js/bignumber.mjs","../node_modules/@web3auth/ethereum-provider/src/rpc/walletMidddleware.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/ethRpcMiddlewares.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/jrpcClient.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/walletConnectUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/WalletConnectProvider.ts","../node_modules/@web3auth/ethereum-provider/src/providers/converter.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/ethPrivatekeyUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/constants.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/index.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/EthereumPrivateKeyProvider.ts","../node_modules/crc-32/crc32.js","../node_modules/tweetnacl-util/nacl-util.js","../node_modules/tweetnacl/nacl-fast.js"],"sourcesContent":["import { Chain, chainsType } from './../types'\nimport mainnet from './mainnet.json'\nimport ropsten from './ropsten.json'\nimport rinkeby from './rinkeby.json'\nimport kovan from './kovan.json'\nimport goerli from './goerli.json'\nimport sepolia from './sepolia.json'\n\n/**\n * @hidden\n */\nexport function _getInitializedChains(customChains?: Chain[]) {\n  const names: any = {\n    '1': 'mainnet',\n    '3': 'ropsten',\n    '4': 'rinkeby',\n    '42': 'kovan',\n    '5': 'goerli',\n    '11155111': 'sepolia',\n  }\n  const chains: any = {\n    mainnet,\n    ropsten,\n    rinkeby,\n    kovan,\n    goerli,\n    sepolia,\n  }\n  if (customChains) {\n    for (const chain of customChains) {\n      const name = chain.name\n      names[chain.chainId.toString()] = name\n      chains[name] = chain\n    }\n  }\n\n  chains['names'] = names\n  return chains\n}\n\n/**\n * @deprecated this constant will be internalized (removed)\n * on next major version update\n */\nexport const chains: chainsType = _getInitializedChains()\n","import { eipsType } from './../types'\n\nexport const EIPs: eipsType = {\n  1153: require('./1153.json'),\n  1559: require('./1559.json'),\n  2315: require('./2315.json'),\n  2537: require('./2537.json'),\n  2565: require('./2565.json'),\n  2718: require('./2718.json'),\n  2929: require('./2929.json'),\n  2930: require('./2930.json'),\n  3198: require('./3198.json'),\n  3529: require('./3529.json'),\n  3540: require('./3540.json'),\n  3541: require('./3541.json'),\n  3554: require('./3554.json'),\n  3607: require('./3607.json'),\n  3651: require('./3651.json'),\n  3670: require('./3670.json'),\n  3675: require('./3675.json'),\n  3855: require('./3855.json'),\n  3860: require('./3860.json'),\n  4345: require('./4345.json'),\n  4399: require('./4399.json'),\n  5133: require('./5133.json'),\n}\n","export const hardforks = [\n  ['chainstart', require('./chainstart.json')],\n  ['homestead', require('./homestead.json')],\n  ['dao', require('./dao.json')],\n  ['tangerineWhistle', require('./tangerineWhistle.json')],\n  ['spuriousDragon', require('./spuriousDragon.json')],\n  ['byzantium', require('./byzantium.json')],\n  ['constantinople', require('./constantinople.json')],\n  ['petersburg', require('./petersburg.json')],\n  ['istanbul', require('./istanbul.json')],\n  ['muirGlacier', require('./muirGlacier.json')],\n  ['berlin', require('./berlin.json')],\n  ['london', require('./london.json')],\n  ['shanghai', require('./shanghai.json')],\n  ['arrowGlacier', require('./arrowGlacier.json')],\n  ['grayGlacier', require('./grayGlacier.json')],\n  ['mergeForkIdTransition', require('./mergeForkIdTransition.json')],\n  ['merge', require('./merge.json')],\n]\n","import { EventEmitter } from 'events'\nimport { buf as crc32Buffer } from 'crc-32'\nimport { BN, BNLike, toType, TypeOutput, intToBuffer } from 'ethereumjs-util'\nimport { _getInitializedChains } from './chains'\nimport { hardforks as HARDFORK_CHANGES } from './hardforks'\nimport { EIPs } from './eips'\nimport {\n  BootstrapNode,\n  Chain as IChain,\n  GenesisBlock,\n  GenesisState,\n  Hardfork as HardforkParams,\n} from './types'\n\nexport enum CustomChain {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMainnet = 'polygon-mainnet',\n\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMumbai = 'polygon-mumbai',\n\n  /**\n   * Arbitrum Rinkeby Testnet\n   *\n   * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n   */\n  ArbitrumRinkebyTestnet = 'arbitrum-rinkeby-testnet',\n\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n  xDaiChain = 'x-dai-chain',\n\n  /**\n   * Optimistic Kovan - testnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticKovan = 'optimistic-kovan',\n\n  /**\n   * Optimistic Ethereum - mainnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticEthereum = 'optimistic-ethereum',\n}\n\nexport enum Chain {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Kovan = 42,\n  Goerli = 5,\n  Sepolia = 11155111,\n}\n\nexport enum Hardfork {\n  Chainstart = 'chainstart',\n  Homestead = 'homestead',\n  Dao = 'dao',\n  TangerineWhistle = 'tangerineWhistle',\n  SpuriousDragon = 'spuriousDragon',\n  Byzantium = 'byzantium',\n  Constantinople = 'constantinople',\n  Petersburg = 'petersburg',\n  Istanbul = 'istanbul',\n  MuirGlacier = 'muirGlacier',\n  Berlin = 'berlin',\n  London = 'london',\n  ArrowGlacier = 'arrowGlacier',\n  GrayGlacier = 'grayGlacier',\n  MergeForkIdTransition = 'mergeForkIdTransition',\n  Merge = 'merge',\n  Shanghai = 'shanghai',\n}\n\nexport enum ConsensusType {\n  ProofOfStake = 'pos',\n  ProofOfWork = 'pow',\n  ProofOfAuthority = 'poa',\n}\n\nexport enum ConsensusAlgorithm {\n  Ethash = 'ethash',\n  Clique = 'clique',\n  Casper = 'casper',\n}\n\ninterface BaseOpts {\n  /**\n   * String identifier ('byzantium') for hardfork or {@link Hardfork} enum.\n   *\n   * Default: Hardfork.Istanbul\n   */\n  hardfork?: string | Hardfork\n  /**\n   * Limit parameter returns to the given hardforks\n   */\n  supportedHardforks?: Array<string | Hardfork>\n  /**\n   * Selected EIPs which can be activated, please use an array for instantiation\n   * (e.g. `eips: [ 2537, ]`)\n   *\n   * Currently supported:\n   *\n   * - [EIP-2537](https://eips.ethereum.org/EIPS/eip-2537) - BLS12-381 precompiles\n   */\n  eips?: number[]\n}\n\n/**\n * Options for instantiating a {@link Common} instance.\n */\nexport interface CommonOpts extends BaseOpts {\n  /**\n   * Chain name ('mainnet'), id (1), or {@link Chain} enum,\n   * either from a chain directly supported or a custom chain\n   * passed in via {@link CommonOpts.customChains}.\n   */\n  chain: string | number | Chain | BN | object\n  /**\n   * Initialize (in addition to the supported chains) with the selected\n   * custom chains\n   *\n   * Usage (directly with the respective chain intialization via the {@link CommonOpts.chain} option):\n   *\n   * Pattern 1 (without genesis state):\n   *\n   * ```javascript\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ myCustomChain1 ]})\n   * ```\n   *\n   * Pattern 2 (with genesis state see {@link GenesisState} for format):\n   *\n   * ```javascript\n   * const simpleState = {\n   *   '0x0...01': '0x100', // For EoA\n   * }\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * import chain1GenesisState from '[PATH_TO_GENESIS_STATES]/chain1GenesisState.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ [ myCustomChain1, simpleState ] ]})\n   * ```\n   *\n   * Pattern 3 (with complex genesis state, containing contract accounts and storage).\n   * Note that in {@link AccountState} there are two\n   * accepted types. This allows to easily insert accounts in the genesis state:\n   *\n   * A complex genesis state with Contract and EoA states would have the following format:\n   *\n   * ```javascript\n   * const complexState = {\n   *   '0x0...01': '0x100', // For EoA\n   *   '0x0...02': ['0x1', '0xRUNTIME_BYTECODE', [[ keyOne, valueOne ], [ keyTwo, valueTwo ]]] // For contracts\n   * }\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ [ myCustomChain1, complexState ] ]})\n   * ```\n   */\n  customChains?: IChain[] | [IChain, GenesisState][]\n}\n\n/**\n * Options to be used with the {@link Common.custom} static constructor.\n */\nexport interface CustomCommonOpts extends BaseOpts {\n  /**\n   * The name (`mainnet`), id (`1`), or {@link Chain} enum of\n   * a standard chain used to base the custom chain params on.\n   */\n  baseChain?: string | number | Chain | BN\n}\n\ninterface hardforkOptions {\n  /** optional, only allow supported HFs (default: false) */\n  onlySupported?: boolean\n  /** optional, only active HFs (default: false) */\n  onlyActive?: boolean\n}\n\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport default class Common extends EventEmitter {\n  readonly DEFAULT_HARDFORK: string | Hardfork\n\n  private _chainParams: IChain\n  private _hardfork: string | Hardfork\n  private _supportedHardforks: Array<string | Hardfork> = []\n  private _eips: number[] = []\n  private _customChains: IChain[] | [IChain, GenesisState][]\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one.\n   *\n   * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n   * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n   *\n   * ```javascript\n   * Common.custom({chainId: 123})\n   * ```\n   *\n   * There are also selected supported custom chains which can be initialized by using one of the\n   * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n   *\n   * ```javascript\n   * Common.custom(CustomChains.MaticMumbai)\n   * ```\n   *\n   * Note that these supported custom chains only provide some base parameters (usually the chain and\n   * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n   * the `@ethereumjs/tx` library to a Layer-2 chain).\n   *\n   * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n   * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n   */\n  static custom(\n    chainParamsOrName: Partial<IChain> | CustomChain,\n    opts: CustomCommonOpts = {}\n  ): Common {\n    const baseChain = opts.baseChain ?? 'mainnet'\n    const standardChainParams = { ...Common._getChainParams(baseChain) }\n    standardChainParams['name'] = 'custom-chain'\n\n    if (typeof chainParamsOrName !== 'string') {\n      return new Common({\n        chain: {\n          ...standardChainParams,\n          ...chainParamsOrName,\n        },\n        ...opts,\n      })\n    } else {\n      if (chainParamsOrName === CustomChain.PolygonMainnet) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMainnet,\n            chainId: 137,\n            networkId: 137,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.PolygonMumbai) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMumbai,\n            chainId: 80001,\n            networkId: 80001,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumRinkebyTestnet,\n            chainId: 421611,\n            networkId: 421611,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.xDaiChain) {\n        return Common.custom(\n          {\n            name: CustomChain.xDaiChain,\n            chainId: 100,\n            networkId: 100,\n          },\n          opts\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticKovan) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticKovan,\n            chainId: 69,\n            networkId: 69,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticEthereum,\n            chainId: 10,\n            networkId: 10,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n      throw new Error(`Custom chain ${chainParamsOrName} not supported`)\n    }\n  }\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one. It uses all the `Chain`\n   * params from {@link baseChain} except the ones overridden in {@link customChainParams}.\n   *\n   * @deprecated Use {@link Common.custom} instead\n   *\n   * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n   * chain params on.\n   * @param customChainParams The custom parameters of the chain.\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n  static forCustomChain(\n    baseChain: string | number | Chain,\n    customChainParams: Partial<IChain>,\n    hardfork?: string | Hardfork,\n    supportedHardforks?: Array<string | Hardfork>\n  ): Common {\n    const standardChainParams = Common._getChainParams(baseChain)\n\n    return new Common({\n      chain: {\n        ...standardChainParams,\n        ...customChainParams,\n      },\n      hardfork: hardfork,\n      supportedHardforks: supportedHardforks,\n    })\n  }\n\n  /**\n   * Static method to determine if a {@link chainId} is supported as a standard chain\n   * @param chainId BN id (`1`) of a standard chain\n   * @returns boolean\n   */\n  static isSupportedChainId(chainId: BN): boolean {\n    const initializedChains: any = _getInitializedChains()\n    return Boolean(initializedChains['names'][chainId.toString()])\n  }\n\n  private static _getChainParams(\n    chain: string | number | Chain | BN,\n    customChains?: IChain[]\n  ): IChain {\n    const initializedChains: any = _getInitializedChains(customChains)\n    if (typeof chain === 'number' || BN.isBN(chain)) {\n      chain = chain.toString()\n\n      if (initializedChains['names'][chain]) {\n        const name: string = initializedChains['names'][chain]\n        return initializedChains[name]\n      }\n\n      throw new Error(`Chain with ID ${chain} not supported`)\n    }\n\n    if (initializedChains[chain]) {\n      return initializedChains[chain]\n    }\n\n    throw new Error(`Chain with name ${chain} not supported`)\n  }\n\n  /**\n   *\n   * @constructor\n   */\n  constructor(opts: CommonOpts) {\n    super()\n    this._customChains = opts.customChains ?? []\n    this._chainParams = this.setChain(opts.chain)\n    this.DEFAULT_HARDFORK = this._chainParams.defaultHardfork ?? Hardfork.Istanbul\n    for (const hf of this._chainParams.hardforks) {\n      if (!hf.forkHash) {\n        hf.forkHash = this._calcForkHash(hf.name)\n      }\n    }\n    this._hardfork = this.DEFAULT_HARDFORK\n    if (opts.supportedHardforks) {\n      this._supportedHardforks = opts.supportedHardforks\n    }\n    if (opts.hardfork) {\n      this.setHardfork(opts.hardfork)\n    }\n    if (opts.eips) {\n      this.setEIPs(opts.eips)\n    }\n  }\n\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain\n   *     representation. Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n  setChain(chain: string | number | Chain | BN | object): any {\n    if (typeof chain === 'number' || typeof chain === 'string' || BN.isBN(chain)) {\n      // Filter out genesis states if passed in to customChains\n      let plainCustomChains: IChain[]\n      if (\n        this._customChains &&\n        this._customChains.length > 0 &&\n        Array.isArray(this._customChains[0])\n      ) {\n        plainCustomChains = (this._customChains as [IChain, GenesisState][]).map((e) => e[0])\n      } else {\n        plainCustomChains = this._customChains as IChain[]\n      }\n      this._chainParams = Common._getChainParams(chain, plainCustomChains)\n    } else if (typeof chain === 'object') {\n      if (this._customChains.length > 0) {\n        throw new Error(\n          'Chain must be a string, number, or BN when initialized with customChains passed in'\n        )\n      }\n      const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes']\n      for (const param of required) {\n        if ((<any>chain)[param] === undefined) {\n          throw new Error(`Missing required chain parameter: ${param}`)\n        }\n      }\n      this._chainParams = chain as IChain\n    } else {\n      throw new Error('Wrong input format')\n    }\n    return this._chainParams\n  }\n\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n   */\n  setHardfork(hardfork: string | Hardfork): void {\n    if (!this._isSupportedHardfork(hardfork)) {\n      throw new Error(`Hardfork ${hardfork} not set as supported in supportedHardforks`)\n    }\n    let existing = false\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if (hfChanges[0] === hardfork) {\n        if (this._hardfork !== hardfork) {\n          this._hardfork = hardfork\n          this.emit('hardforkChanged', hardfork)\n        }\n        existing = true\n      }\n    }\n    if (!existing) {\n      throw new Error(`Hardfork with name ${hardfork} not supported`)\n    }\n  }\n\n  /**\n   * Returns the hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @returns The name of the HF\n   */\n  getHardforkByBlockNumber(blockNumber: BNLike, td?: BNLike): string {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    td = toType(td, TypeOutput.BN)\n\n    let hardfork = Hardfork.Chainstart\n    let minTdHF\n    let maxTdHF\n    let previousHF\n    for (const hf of this.hardforks()) {\n      // Skip comparison for not applied HFs\n      if (hf.block === null) {\n        if (td !== undefined && td !== null && hf.td !== undefined && hf.td !== null) {\n          if (td.gte(new BN(hf.td))) {\n            return hf.name\n          }\n        }\n        continue\n      }\n      if (blockNumber.gte(new BN(hf.block))) {\n        hardfork = hf.name as Hardfork\n      }\n      if (td && hf.td) {\n        if (td.gte(new BN(hf.td))) {\n          minTdHF = hf.name\n        } else {\n          maxTdHF = previousHF\n        }\n      }\n      previousHF = hf.name\n    }\n    if (td) {\n      let msgAdd = `block number: ${blockNumber} (-> ${hardfork}), `\n      if (minTdHF) {\n        if (!this.hardforkGteHardfork(hardfork, minTdHF)) {\n          const msg = 'HF determined by block number is lower than the minimum total difficulty HF'\n          msgAdd += `total difficulty: ${td} (-> ${minTdHF})`\n          throw new Error(`${msg}: ${msgAdd}`)\n        }\n      }\n      if (maxTdHF) {\n        if (!this.hardforkGteHardfork(maxTdHF, hardfork)) {\n          const msg = 'Maximum HF determined by total difficulty is lower than the block number HF'\n          msgAdd += `total difficulty: ${td} (-> ${maxTdHF})`\n          throw new Error(`${msg}: ${msgAdd}`)\n        }\n      }\n    }\n    return hardfork\n  }\n\n  /**\n   * Sets a new hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @returns The name of the HF set\n   */\n  setHardforkByBlockNumber(blockNumber: BNLike, td?: BNLike): string {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td)\n    this.setHardfork(hardfork)\n    return hardfork\n  }\n\n  /**\n   * Internal helper function to choose between hardfork set and hardfork provided as param\n   * @param hardfork Hardfork given to function as a parameter\n   * @returns Hardfork chosen to be used\n   */\n  _chooseHardfork(hardfork?: string | Hardfork | null, onlySupported: boolean = true): string {\n    if (!hardfork) {\n      hardfork = this._hardfork\n    } else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n      throw new Error(`Hardfork ${hardfork} not set as supported in supportedHardforks`)\n    }\n    return hardfork\n  }\n\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params\n   */\n  _getHardfork(hardfork: string | Hardfork): any {\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['name'] === hardfork) return hf\n    }\n    throw new Error(`Hardfork ${hardfork} not defined for chain ${this.chainName()}`)\n  }\n\n  /**\n   * Internal helper function to check if a hardfork is set to be supported by the library\n   * @param hardfork Hardfork name\n   * @returns True if hardfork is supported\n   */\n  _isSupportedHardfork(hardfork: string | Hardfork | null): boolean {\n    if (this._supportedHardforks.length > 0) {\n      for (const supportedHf of this._supportedHardforks) {\n        if (hardfork === supportedHf) return true\n      }\n    } else {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n  setEIPs(eips: number[] = []) {\n    for (const eip of eips) {\n      if (!(eip in EIPs)) {\n        throw new Error(`${eip} not supported`)\n      }\n      const minHF = this.gteHardfork(EIPs[eip]['minimumHardfork'])\n      if (!minHF) {\n        throw new Error(\n          `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`\n        )\n      }\n      if (EIPs[eip].requiredEIPs) {\n        ;(EIPs[eip].requiredEIPs as number[]).forEach((elem) => {\n          if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n            throw new Error(`${eip} requires EIP ${elem}, but is not included in the EIP list`)\n          }\n        })\n      }\n    }\n    this._eips = eips\n  }\n\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precendence.\n   * Otherwise the parameter if taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `null` if not found\n   */\n  param(topic: string, name: string): any {\n    // TODO: consider the case that different active EIPs\n    // can change the same parameter\n    let value = null\n    for (const eip of this._eips) {\n      value = this.paramByEIP(topic, name, eip)\n      if (value !== null) {\n        return value\n      }\n    }\n    return this.paramByHardfork(topic, name, this._hardfork)\n  }\n\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `null` if not found\n   */\n  paramByHardfork(topic: string, name: string, hardfork: string | Hardfork): any {\n    hardfork = this._chooseHardfork(hardfork)\n\n    let value = null\n    for (const hfChanges of HARDFORK_CHANGES) {\n      // EIP-referencing HF file (e.g. berlin.json)\n      if ('eips' in hfChanges[1]) {\n        const hfEIPs = hfChanges[1]['eips']\n        for (const eip of hfEIPs) {\n          const valueEIP = this.paramByEIP(topic, name, eip)\n          value = valueEIP !== null ? valueEIP : value\n        }\n        // Paramater-inlining HF file (e.g. istanbul.json)\n      } else {\n        if (!hfChanges[1][topic]) {\n          throw new Error(`Topic ${topic} not defined`)\n        }\n        if (hfChanges[1][topic][name] !== undefined) {\n          value = hfChanges[1][topic][name].v\n        }\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value\n  }\n\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `null` if not found\n   */\n  paramByEIP(topic: string, name: string, eip: number): any {\n    if (!(eip in EIPs)) {\n      throw new Error(`${eip} not supported`)\n    }\n\n    const eipParams = EIPs[eip]\n    if (!(topic in eipParams)) {\n      throw new Error(`Topic ${topic} not defined`)\n    }\n    if (eipParams[topic][name] === undefined) {\n      return null\n    }\n    const value = eipParams[topic][name].v\n    return value\n  }\n\n  /**\n   * Returns a parameter for the hardfork active on block number\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   */\n  paramByBlock(topic: string, name: string, blockNumber: BNLike): any {\n    const activeHfs = this.activeHardforks(blockNumber)\n    const hardfork = activeHfs[activeHfs.length - 1]['name']\n    return this.paramByHardfork(topic, name, hardfork)\n  }\n\n  /**\n   * Checks if an EIP is activated by either being included in the EIPs\n   * manually passed in with the {@link CommonOpts.eips} or in a\n   * hardfork currently being active\n   *\n   * Note: this method only works for EIPs being supported\n   * by the {@link CommonOpts.eips} constructor option\n   * @param eip\n   */\n  isActivatedEIP(eip: number): boolean {\n    if (this.eips().includes(eip)) {\n      return true\n    }\n    for (const hfChanges of HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n        if (hf['eips'].includes(eip)) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n  hardforkIsActiveOnBlock(\n    hardfork: string | Hardfork | null,\n    blockNumber: BNLike,\n    opts: hardforkOptions = {}\n  ): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    const onlySupported = opts.onlySupported ?? false\n    hardfork = this._chooseHardfork(hardfork, onlySupported)\n    const hfBlock = this.hardforkBlockBN(hardfork)\n    if (hfBlock && blockNumber.gte(hfBlock)) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n  activeOnBlock(blockNumber: BNLike, opts?: hardforkOptions): boolean {\n    return this.hardforkIsActiveOnBlock(null, blockNumber, opts)\n  }\n\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n  hardforkGteHardfork(\n    hardfork1: string | Hardfork | null,\n    hardfork2: string | Hardfork,\n    opts: hardforkOptions = {}\n  ): boolean {\n    const onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive\n    hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported)\n\n    let hardforks\n    if (onlyActive) {\n      hardforks = this.activeHardforks(null, opts)\n    } else {\n      hardforks = this.hardforks()\n    }\n\n    let posHf1 = -1,\n      posHf2 = -1\n    let index = 0\n    for (const hf of hardforks) {\n      if (hf['name'] === hardfork1) posHf1 = index\n      if (hf['name'] === hardfork2) posHf2 = index\n      index += 1\n    }\n    return posHf1 >= posHf2 && posHf2 !== -1\n  }\n\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @param opts Hardfork options\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n  gteHardfork(hardfork: string | Hardfork, opts?: hardforkOptions): boolean {\n    return this.hardforkGteHardfork(null, hardfork, opts)\n  }\n\n  /**\n   * Checks if given or set hardfork is active on the chain\n   * @param hardfork Hardfork name, optional if HF set\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if hardfork is active on the chain\n   */\n  hardforkIsActiveOnChain(\n    hardfork?: string | Hardfork | null,\n    opts: hardforkOptions = {}\n  ): boolean {\n    const onlySupported = opts.onlySupported ?? false\n    hardfork = this._chooseHardfork(hardfork, onlySupported)\n    for (const hf of this.hardforks()) {\n      if (hf['name'] === hardfork && hf['block'] !== null) return true\n    }\n    return false\n  }\n\n  /**\n   * Returns the active hardfork switches for the current chain\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Array with hardfork arrays\n   */\n  activeHardforks(blockNumber?: BNLike | null, opts: hardforkOptions = {}): HardforkParams[] {\n    const activeHardforks: HardforkParams[] = []\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['block'] === null) continue\n      if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block']) break\n      if (opts.onlySupported && !this._isSupportedHardfork(hf['name'])) continue\n\n      activeHardforks.push(hf)\n    }\n    return activeHardforks\n  }\n\n  /**\n   * Returns the latest active hardfork name for chain or block or throws if unavailable\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Hardfork name\n   */\n  activeHardfork(blockNumber?: BNLike | null, opts: hardforkOptions = {}): string {\n    const activeHardforks = this.activeHardforks(blockNumber, opts)\n    if (activeHardforks.length > 0) {\n      return activeHardforks[activeHardforks.length - 1]['name']\n    } else {\n      throw new Error(`No (supported) active hardfork found`)\n    }\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   * @deprecated Please use {@link Common.hardforkBlockBN} for large number support\n   */\n  hardforkBlock(hardfork?: string | Hardfork): number | null {\n    const block = this.hardforkBlockBN(hardfork)\n    return toType(block, TypeOutput.Number)\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   */\n  hardforkBlockBN(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const block = this._getHardfork(hardfork)['block']\n    if (block === undefined || block === null) {\n      return null\n    }\n    return new BN(block)\n  }\n\n  /**\n   * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Total difficulty or null if no set\n   */\n  hardforkTD(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const td = this._getHardfork(hardfork)['td']\n    if (td === undefined || td === null) {\n      return null\n    }\n    return new BN(td)\n  }\n\n  /**\n   * True if block number provided is the hardfork (given or set) change block\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n  isHardforkBlock(blockNumber: BNLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    hardfork = this._chooseHardfork(hardfork, false)\n    const block = this.hardforkBlockBN(hardfork)\n    return block ? block.eq(blockNumber) : false\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   * @deprecated Please use {@link Common.nextHardforkBlockBN} for large number support\n   */\n  nextHardforkBlock(hardfork?: string | Hardfork): number | null {\n    const block = this.nextHardforkBlockBN(hardfork)\n    return toType(block, TypeOutput.Number)\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   */\n  nextHardforkBlockBN(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const hfBlock = this.hardforkBlockBN(hardfork)\n    if (hfBlock === null) {\n      return null\n    }\n    // Next fork block number or null if none available\n    // Logic: if accumulator is still null and on the first occurrence of\n    // a block greater than the current hfBlock set the accumulator,\n    // pass on the accumulator as the final result from this time on\n    const nextHfBlock = this.hardforks().reduce((acc: BN | null, hf: HardforkParams) => {\n      const block = new BN(hf.block!)\n      return block.gt(hfBlock) && acc === null ? block : acc\n    }, null)\n    return nextHfBlock\n  }\n\n  /**\n   * True if block number provided is the hardfork change block following the hardfork given or set\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n  isNextHardforkBlock(blockNumber: BNLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    hardfork = this._chooseHardfork(hardfork, false)\n    const nextHardforkBlock = this.nextHardforkBlockBN(hardfork)\n\n    return nextHardforkBlock === null ? false : nextHardforkBlock.eq(blockNumber)\n  }\n\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @returns Fork hash as hex string\n   */\n  _calcForkHash(hardfork: string | Hardfork) {\n    const genesis = Buffer.from(this.genesis().hash.substr(2), 'hex')\n\n    let hfBuffer = Buffer.alloc(0)\n    let prevBlock = 0\n    for (const hf of this.hardforks()) {\n      const block = hf.block\n\n      // Skip for chainstart (0), not applied HFs (null) and\n      // when already applied on same block number HFs\n      if (block !== 0 && block !== null && block !== prevBlock) {\n        const hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex')\n        hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer])\n      }\n\n      if (hf.name === hardfork) break\n      if (block !== null) {\n        prevBlock = block\n      }\n    }\n    const inputBuffer = Buffer.concat([genesis, hfBuffer])\n\n    // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n    const forkhash = intToBuffer(crc32Buffer(inputBuffer) >>> 0).toString('hex')\n    return `0x${forkhash}`\n  }\n\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   */\n  forkHash(hardfork?: string | Hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const data = this._getHardfork(hardfork)\n    if (data['block'] === null && data['td'] === undefined) {\n      const msg = 'No fork hash calculation possible for future hardfork'\n      throw new Error(msg)\n    }\n    if (data['forkHash'] !== undefined) {\n      return data['forkHash']\n    }\n    return this._calcForkHash(hardfork)\n  }\n\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n  hardforkForForkHash(forkHash: string): any | null {\n    const resArray = this.hardforks().filter((hf: any) => {\n      return hf.forkHash === forkHash\n    })\n    return resArray.length >= 1 ? resArray[resArray.length - 1] : null\n  }\n\n  /**\n   * Returns the Genesis parameters of the current chain\n   * @returns Genesis dictionary\n   */\n  genesis(): GenesisBlock {\n    return this._chainParams['genesis']\n  }\n\n  /**\n   * Returns the Genesis state of the current chain,\n   * all values are provided as hex-prefixed strings.\n   */\n  genesisState(): GenesisState {\n    // Use require statements here in favor of import statements\n    // to load json files on demand\n    // (high memory usage by large mainnet.json genesis state file)\n    switch (this.chainName()) {\n      case 'mainnet':\n        return require('./genesisStates/mainnet.json')\n      case 'ropsten':\n        return require('./genesisStates/ropsten.json')\n      case 'rinkeby':\n        return require('./genesisStates/rinkeby.json')\n      case 'kovan':\n        return require('./genesisStates/kovan.json')\n      case 'goerli':\n        return require('./genesisStates/goerli.json')\n      case 'sepolia':\n        return require('./genesisStates/sepolia.json')\n    }\n\n    // Custom chains with genesis state provided\n    if (\n      this._customChains &&\n      this._customChains.length > 0 &&\n      Array.isArray(this._customChains[0])\n    ) {\n      for (const chainArrayWithGenesis of this._customChains as [IChain, GenesisState][]) {\n        if (chainArrayWithGenesis[0].name === this.chainName()) {\n          return chainArrayWithGenesis[1]\n        }\n      }\n    }\n\n    return {}\n  }\n\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n  hardforks(): HardforkParams[] {\n    return this._chainParams['hardforks']\n  }\n\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n  bootstrapNodes(): BootstrapNode[] {\n    return this._chainParams['bootstrapNodes']\n  }\n\n  /**\n   * Returns DNS networks for the current chain\n   * @returns {String[]} Array of DNS ENR urls\n   */\n  dnsNetworks(): string[] {\n    return this._chainParams['dnsNetworks']!\n  }\n\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n  hardfork(): string | Hardfork {\n    return this._hardfork\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   * @deprecated Please use {@link Common.chainIdBN} for large number support\n   */\n  chainId(): number {\n    return toType(this.chainIdBN(), TypeOutput.Number)\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n  chainIdBN(): BN {\n    return new BN(this._chainParams['chainId'])\n  }\n\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n  chainName(): string {\n    return this._chainParams['name']\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   * @deprecated Please use {@link Common.networkIdBN} for large number support\n   */\n  networkId(): number {\n    return toType(this.networkIdBN(), TypeOutput.Number)\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n  networkIdBN(): BN {\n    return new BN(this._chainParams['networkId'])\n  }\n\n  /**\n   * Returns the active EIPs\n   * @returns List of EIPs\n   */\n  eips(): number[] {\n    return this._eips\n  }\n\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"|\"pos\"\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusType(): string | ConsensusType {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['type']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    return this._chainParams['consensus']!['type']\n  }\n\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type,\n   * \"clique\" for \"poa\" consensus type or\n   * \"casper\" for \"pos\" consensus type.\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusAlgorithm(): string | ConsensusAlgorithm {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['algorithm']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    return this._chainParams['consensus']!['algorithm'] as ConsensusAlgorithm\n  }\n\n  /**\n   * Returns a dictionary with consensus configuration\n   * parameters based on the consensus algorithm\n   *\n   * Expected returns (parameters must be present in\n   * the respective chain json files):\n   *\n   * ethash: -\n   * clique: period, epoch\n   * aura: -\n   * casper: -\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusConfig(): { [key: string]: any } {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        // The config parameter is named after the respective consensus algorithm\n        value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']]\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    const consensusAlgorithm = this.consensusAlgorithm()\n    return this._chainParams['consensus']![consensusAlgorithm as ConsensusAlgorithm]\n  }\n\n  /**\n   * Returns a deep copy of this {@link Common} instance.\n   */\n  copy(): Common {\n    const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n    copy.removeAllListeners()\n    return copy\n  }\n}\n","import Common, { Chain, Hardfork } from '@ethereumjs/common'\nimport {\n  Address,\n  BN,\n  toBuffer,\n  MAX_INTEGER,\n  MAX_UINT64,\n  unpadBuffer,\n  ecsign,\n  publicToAddress,\n  BNLike,\n  bufferToHex,\n} from 'ethereumjs-util'\nimport {\n  TxData,\n  JsonTx,\n  AccessListEIP2930ValuesArray,\n  AccessListEIP2930TxData,\n  FeeMarketEIP1559ValuesArray,\n  FeeMarketEIP1559TxData,\n  TxValuesArray,\n  Capability,\n  TxOptions,\n} from './types'\n\ninterface TransactionCache {\n  hash: Buffer | undefined\n  dataFee?: {\n    value: BN\n    hardfork: string | Hardfork\n  }\n}\n\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nexport abstract class BaseTransaction<TransactionObject> {\n  private readonly _type: number\n\n  public readonly nonce: BN\n  public readonly gasLimit: BN\n  public readonly to?: Address\n  public readonly value: BN\n  public readonly data: Buffer\n\n  public readonly v?: BN\n  public readonly r?: BN\n  public readonly s?: BN\n\n  public readonly common!: Common\n\n  protected cache: TransactionCache = {\n    hash: undefined,\n    dataFee: undefined,\n  }\n\n  protected readonly txOptions: TxOptions\n\n  /**\n   * List of tx type defining EIPs,\n   * e.g. 1559 (fee market) and 2930 (access lists)\n   * for FeeMarketEIP1559Transaction objects\n   */\n  protected activeCapabilities: number[] = []\n\n  /**\n   * The default chain the tx falls back to if no Common\n   * is provided and if the chain can't be derived from\n   * a passed in chainId (only EIP-2718 typed txs) or\n   * EIP-155 signature (legacy txs).\n   *\n   * @hidden\n   */\n  protected DEFAULT_CHAIN = Chain.Mainnet\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK: string | Hardfork = Hardfork.Istanbul\n\n  constructor(txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData, opts: TxOptions) {\n    const { nonce, gasLimit, to, value, data, v, r, s, type } = txData\n    this._type = new BN(toBuffer(type)).toNumber()\n\n    this.txOptions = opts\n\n    const toB = toBuffer(to === '' ? '0x' : to)\n    const vB = toBuffer(v === '' ? '0x' : v)\n    const rB = toBuffer(r === '' ? '0x' : r)\n    const sB = toBuffer(s === '' ? '0x' : s)\n\n    this.nonce = new BN(toBuffer(nonce === '' ? '0x' : nonce))\n    this.gasLimit = new BN(toBuffer(gasLimit === '' ? '0x' : gasLimit))\n    this.to = toB.length > 0 ? new Address(toB) : undefined\n    this.value = new BN(toBuffer(value === '' ? '0x' : value))\n    this.data = toBuffer(data === '' ? '0x' : data)\n\n    this.v = vB.length > 0 ? new BN(vB) : undefined\n    this.r = rB.length > 0 ? new BN(rB) : undefined\n    this.s = sB.length > 0 ? new BN(sB) : undefined\n\n    this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s })\n\n    // geth limits gasLimit to 2^64-1\n    this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64)\n\n    // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n    this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true)\n  }\n\n  /**\n   * Alias for {@link BaseTransaction.type}\n   *\n   * @deprecated Use `type` instead\n   */\n  get transactionType(): number {\n    return this.type\n  }\n\n  /**\n   * Returns the transaction type.\n   *\n   * Note: legacy txs will return tx type `0`.\n   */\n  get type() {\n    return this._type\n  }\n\n  /**\n   * Checks if a tx type defining capability is active\n   * on a tx, for example the EIP-1559 fee market mechanism\n   * or the EIP-2930 access list feature.\n   *\n   * Note that this is different from the tx type itself,\n   * so EIP-2930 access lists can very well be active\n   * on an EIP-1559 tx for example.\n   *\n   * This method can be useful for feature checks if the\n   * tx type is unknown (e.g. when instantiated with\n   * the tx factory).\n   *\n   * See `Capabilites` in the `types` module for a reference\n   * on all supported capabilities.\n   */\n  supports(capability: Capability) {\n    return this.activeCapabilities.includes(capability)\n  }\n\n  /**\n   * Checks if the transaction has the minimum amount of gas required\n   * (DataFee + TxFee + Creation Fee).\n   */\n  validate(): boolean\n  validate(stringError: false): boolean\n  validate(stringError: true): string[]\n  validate(stringError: boolean = false): boolean | string[] {\n    const errors = []\n\n    if (this.getBaseFee().gt(this.gasLimit)) {\n      errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`)\n    }\n\n    if (this.isSigned() && !this.verifySignature()) {\n      errors.push('Invalid Signature')\n    }\n\n    return stringError ? errors : errors.length === 0\n  }\n\n  /**\n   * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n  getBaseFee(): BN {\n    const fee = this.getDataFee().addn(this.common.param('gasPrices', 'tx'))\n    if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n      fee.iaddn(this.common.param('gasPrices', 'txCreation'))\n    }\n    return fee\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    const txDataZero = this.common.param('gasPrices', 'txDataZero')\n    const txDataNonZero = this.common.param('gasPrices', 'txDataNonZero')\n\n    let cost: number | BN = 0\n    for (let i = 0; i < this.data.length; i++) {\n      this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero)\n    }\n\n    cost = new BN(cost)\n    if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n      const dataLength = Math.ceil(this.data.length / 32)\n      const initCodeCost = new BN(this.common.param('gasPrices', 'initCodeWordCost')).imuln(\n        dataLength\n      )\n      cost.iadd(initCodeCost)\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  abstract getUpfrontCost(): BN\n\n  /**\n   * If the tx's `to` is to the creation address\n   */\n  toCreationAddress(): boolean {\n    return this.to === undefined || this.to.buf.length === 0\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of this transaction, in order.\n   *\n   * Use {@link BaseTransaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link BaseTransaction.getMessageToSign}.\n   */\n  abstract raw(): TxValuesArray | AccessListEIP2930ValuesArray | FeeMarketEIP1559ValuesArray\n\n  /**\n   * Returns the encoding of the transaction.\n   */\n  abstract serialize(): Buffer\n\n  // Returns the unsigned tx (hashed or raw), which is used to sign the transaction.\n  //\n  // Note: do not use code docs here since VS Studio is then not able to detect the\n  // comments from the inherited methods\n  abstract getMessageToSign(hashMessage: false): Buffer | Buffer[]\n  abstract getMessageToSign(hashMessage?: true): Buffer\n\n  abstract hash(): Buffer\n\n  abstract getMessageToVerifySignature(): Buffer\n\n  public isSigned(): boolean {\n    const { v, r, s } = this\n    if (this.type === 0) {\n      if (!v || !r || !s) {\n        return false\n      } else {\n        return true\n      }\n    } else {\n      if (v === undefined || !r || !s) {\n        return false\n      } else {\n        return true\n      }\n    }\n  }\n\n  /**\n   * Determines if the signature is valid\n   */\n  verifySignature(): boolean {\n    try {\n      // Main signature verification is done in `getSenderPublicKey()`\n      const publicKey = this.getSenderPublicKey()\n      return unpadBuffer(publicKey).length !== 0\n    } catch (e: any) {\n      return false\n    }\n  }\n\n  /**\n   * Returns the sender's address\n   */\n  getSenderAddress(): Address {\n    return new Address(publicToAddress(this.getSenderPublicKey()))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  abstract getSenderPublicKey(): Buffer\n\n  /**\n   * Signs a transaction.\n   *\n   * Note that the signed tx is returned as a new object,\n   * use as follows:\n   * ```javascript\n   * const signedTx = tx.sign(privateKey)\n   * ```\n   */\n  sign(privateKey: Buffer): TransactionObject {\n    if (privateKey.length !== 32) {\n      const msg = this._errorMsg('Private key must be 32 bytes in length.')\n      throw new Error(msg)\n    }\n\n    // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n    // and want to recreate a signature (where EIP155 should be applied)\n    // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n    // 2021-06-23\n    let hackApplied = false\n    if (\n      this.type === 0 &&\n      this.common.gteHardfork('spuriousDragon') &&\n      !this.supports(Capability.EIP155ReplayProtection)\n    ) {\n      this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      hackApplied = true\n    }\n\n    const msgHash = this.getMessageToSign(true)\n    const { v, r, s } = ecsign(msgHash, privateKey)\n    const tx = this._processSignature(v, r, s)\n\n    // Hack part 2\n    if (hackApplied) {\n      const index = this.activeCapabilities.indexOf(Capability.EIP155ReplayProtection)\n      if (index > -1) {\n        this.activeCapabilities.splice(index, 1)\n      }\n    }\n\n    return tx\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  abstract toJSON(): JsonTx\n\n  // Accept the v,r,s values from the `sign` method, and convert this into a TransactionObject\n  protected abstract _processSignature(v: number, r: Buffer, s: Buffer): TransactionObject\n\n  /**\n   * Does chain ID checks on common and returns a common\n   * to be used on instantiation\n   * @hidden\n   *\n   * @param common - {@link Common} instance from tx options\n   * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n   */\n  protected _getCommon(common?: Common, chainId?: BNLike) {\n    // Chain ID provided\n    if (chainId) {\n      const chainIdBN = new BN(toBuffer(chainId))\n      if (common) {\n        if (!common.chainIdBN().eq(chainIdBN)) {\n          const msg = this._errorMsg('The chain ID does not match the chain ID of Common')\n          throw new Error(msg)\n        }\n        // Common provided, chain ID does match\n        // -> Return provided Common\n        return common.copy()\n      } else {\n        if (Common.isSupportedChainId(chainIdBN)) {\n          // No Common, chain ID supported by Common\n          // -> Instantiate Common with chain ID\n          return new Common({ chain: chainIdBN, hardfork: this.DEFAULT_HARDFORK })\n        } else {\n          // No Common, chain ID not supported by Common\n          // -> Instantiate custom Common derived from DEFAULT_CHAIN\n          return Common.forCustomChain(\n            this.DEFAULT_CHAIN,\n            {\n              name: 'custom-chain',\n              networkId: chainIdBN,\n              chainId: chainIdBN,\n            },\n            this.DEFAULT_HARDFORK\n          )\n        }\n      }\n    } else {\n      // No chain ID provided\n      // -> return Common provided or create new default Common\n      return (\n        common?.copy() ?? new Common({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK })\n      )\n    }\n  }\n\n  /**\n   * Validates that an object with BN values cannot exceed the specified bit limit.\n   * @param values Object containing string keys and BN values\n   * @param bits Number of bits to check (64 or 256)\n   * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n   */\n  protected _validateCannotExceedMaxInteger(\n    values: { [key: string]: BN | undefined },\n    bits = 256,\n    cannotEqual = false\n  ) {\n    for (const [key, value] of Object.entries(values)) {\n      switch (bits) {\n        case 64:\n          if (cannotEqual) {\n            if (value?.gte(MAX_UINT64)) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value?.gt(MAX_UINT64)) {\n              const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`)\n              throw new Error(msg)\n            }\n          }\n          break\n        case 256:\n          if (cannotEqual) {\n            if (value?.gte(MAX_INTEGER)) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value?.gt(MAX_INTEGER)) {\n              const msg = this._errorMsg(\n                `${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          }\n          break\n        default: {\n          const msg = this._errorMsg('unimplemented bits value')\n          throw new Error(msg)\n        }\n      }\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public abstract errorStr(): string\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected abstract _errorMsg(msg: string): string\n\n  /**\n   * Returns the shared error postfix part for _error() method\n   * tx type implementations.\n   */\n  protected _getSharedErrorPostfix() {\n    let hash = ''\n    try {\n      hash = this.isSigned() ? bufferToHex(this.hash()) : 'not available (unsigned)'\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let isSigned = ''\n    try {\n      isSigned = this.isSigned().toString()\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let hf = ''\n    try {\n      hf = this.common.hardfork()\n    } catch (e: any) {\n      hf = 'error'\n    }\n\n    let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `\n    postfix += `signed=${isSigned} hf=${hf}`\n\n    return postfix\n  }\n}\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  keccak256,\n  MAX_INTEGER,\n  rlp,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { BaseTransaction } from './baseTransaction'\nimport {\n  AccessList,\n  AccessListBuffer,\n  FeeMarketEIP1559TxData,\n  FeeMarketEIP1559ValuesArray,\n  JsonTx,\n  N_DIV_2,\n  TxOptions,\n} from './types'\nimport { AccessLists, checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 2\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nexport default class FeeMarketEIP1559Transaction extends BaseTransaction<FeeMarketEIP1559Transaction> {\n  public readonly chainId: BN\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: BN\n  public readonly maxFeePerGas: BN\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'london'\n\n  /**\n   * EIP-2930 alias for `r`\n   *\n   * @deprecated use `r` instead\n   */\n  get senderR() {\n    return this.r\n  }\n\n  /**\n   * EIP-2930 alias for `s`\n   *\n   * @deprecated use `s` instead\n   */\n  get senderS() {\n    return this.s\n  }\n\n  /**\n   * EIP-2930 alias for `v`\n   *\n   * @deprecated use `v` instead\n   */\n  get yParity() {\n    return this.v\n  }\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    return new FeeMarketEIP1559Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = rlp.decode(serialized.slice(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return FeeMarketEIP1559Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link FeeMarketEIP1559Transaction.fromSerializedTx})\n   *\n   * Note: This means that the Buffer should start with 0x01.\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link FeeMarketEIP1559Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return FeeMarketEIP1559Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   */\n  public static fromValuesArray(values: FeeMarketEIP1559ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 9 && values.length !== 12) {\n      throw new Error(\n        'Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).'\n      )\n    }\n\n    const [\n      chainId,\n      nonce,\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      gasLimit,\n      to,\n      value,\n      data,\n      accessList,\n      v,\n      r,\n      s,\n    ] = values\n\n    validateNoLeadingZeroes({ nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, value, v, r, s })\n\n    return new FeeMarketEIP1559Transaction(\n      {\n        chainId: new BN(chainId),\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? [],\n        v: v !== undefined ? new BN(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainIdBN()\n\n    if (!this.common.isActivatedEIP(1559)) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = new BN(toBuffer(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = new BN(\n      toBuffer(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    if (this.gasLimit.mul(this.maxFeePerGas).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas.lt(this.maxPriorityFeePerGas)) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.v && !this.v.eqn(0) && !this.v.eqn(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    const cost = super.getDataFee()\n    cost.iaddn(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: BN = new BN(0)): BN {\n    const inclusionFeePerGas = BN.min(this.maxPriorityFeePerGas, this.maxFeePerGas.sub(baseFee))\n    const gasPrice = inclusionFeePerGas.add(baseFee)\n    return this.gasLimit.mul(gasPrice).add(this.value)\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   *\n   * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n   */\n  raw(): FeeMarketEIP1559ValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.chainId),\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.maxPriorityFeePerGas),\n      bnToUnpaddedBuffer(this.maxFeePerGas),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-1559 transaction.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 9)\n    const message = Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n    if (hashMessage) {\n      return keccak256(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = keccak256(this.serialize())\n      }\n      return this.cache.hash\n    }\n\n    return keccak256(this.serialize())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { v, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        v!.addn(27), // Recover the 27 which was stripped from ecsign\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: number, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return FeeMarketEIP1559Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: new BN(v - 27), // This looks extremely hacky: ethereumjs-util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bnToHex(this.chainId),\n      nonce: bnToHex(this.nonce),\n      maxPriorityFeePerGas: bnToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bnToHex(this.maxFeePerGas),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  keccak256,\n  MAX_INTEGER,\n  rlp,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { BaseTransaction } from './baseTransaction'\nimport {\n  AccessList,\n  AccessListBuffer,\n  AccessListEIP2930TxData,\n  AccessListEIP2930ValuesArray,\n  JsonTx,\n  TxOptions,\n  N_DIV_2,\n} from './types'\n\nimport { AccessLists, checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 1\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nexport default class AccessListEIP2930Transaction extends BaseTransaction<AccessListEIP2930Transaction> {\n  public readonly chainId: BN\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly gasPrice: BN\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'berlin'\n\n  /**\n   * EIP-2930 alias for `r`\n   *\n   * @deprecated use `r` instead\n   */\n  get senderR() {\n    return this.r\n  }\n\n  /**\n   * EIP-2930 alias for `s`\n   *\n   * @deprecated use `s` instead\n   */\n  get senderS() {\n    return this.s\n  }\n\n  /**\n   * EIP-2930 alias for `v`\n   *\n   * @deprecated use `v` instead\n   */\n  get yParity() {\n    return this.v\n  }\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    return new AccessListEIP2930Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = rlp.decode(serialized.slice(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return AccessListEIP2930Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link AccessListEIP2930Transaction.fromSerializedTx})\n   *\n   * Note: This means that the Buffer should start with 0x01.\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link AccessListEIP2930Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return AccessListEIP2930Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   */\n  public static fromValuesArray(values: AccessListEIP2930ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 8 && values.length !== 11) {\n      throw new Error(\n        'Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).'\n      )\n    }\n\n    const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    const emptyAccessList: AccessList = []\n\n    return new AccessListEIP2930Transaction(\n      {\n        chainId: new BN(chainId),\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? emptyAccessList,\n        v: v !== undefined ? new BN(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, gasPrice } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainIdBN()\n\n    // EIP-2718 check is done in Common\n    if (!this.common.isActivatedEIP(2930)) {\n      throw new Error('EIP-2930 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.gasPrice = new BN(toBuffer(gasPrice === '' ? '0x' : gasPrice))\n\n    this._validateCannotExceedMaxInteger({\n      gasPrice: this.gasPrice,\n    })\n\n    if (this.gasPrice.mul(this.gasLimit).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER')\n      throw new Error(msg)\n    }\n    if (this.v && !this.v.eqn(0) && !this.v.eqn(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    const cost = super.getDataFee()\n    cost.iaddn(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): BN {\n    return this.gasLimit.mul(this.gasPrice).add(this.value)\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   *\n   * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n   */\n  raw(): AccessListEIP2930ValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.chainId),\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-2930 transaction.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 8)\n    const message = Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n    if (hashMessage) {\n      return keccak256(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = keccak256(this.serialize())\n      }\n      return this.cache.hash\n    }\n\n    return keccak256(this.serialize())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { yParity, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        yParity!.addn(27), // Recover the 27 which was stripped from ecsign\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: number, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return AccessListEIP2930Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: new BN(v - 27), // This looks extremely hacky: ethereumjs-util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bnToHex(this.chainId),\n      nonce: bnToHex(this.nonce),\n      gasPrice: bnToHex(this.gasPrice),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n    errorStr += ` gasPrice=${this.gasPrice} accessListCount=${this.accessList?.length ?? 0}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","export { default as Transaction } from './legacyTransaction'\nexport { default as AccessListEIP2930Transaction } from './eip2930Transaction'\nexport { default as TransactionFactory } from './transactionFactory'\nexport { default as FeeMarketEIP1559Transaction } from './eip1559Transaction'\nexport * from './types'\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  MAX_INTEGER,\n  rlp,\n  rlphash,\n  toBuffer,\n  unpadBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport { TxOptions, TxData, JsonTx, N_DIV_2, TxValuesArray, Capability } from './types'\nimport { BaseTransaction } from './baseTransaction'\nimport Common from '@ethereumjs/common'\nimport { checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 0\n\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nexport default class Transaction extends BaseTransaction<Transaction> {\n  public readonly gasPrice: BN\n\n  public readonly common: Common\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n   *\n   * Notes:\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: TxData, opts: TxOptions = {}) {\n    return new Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input. Must be array')\n    }\n\n    return this.fromValuesArray(values, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link Transaction.fromSerializedTx})\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n    // This happens if you get the RLP data from `raw()`\n    if (values.length !== 6 && values.length !== 9) {\n      throw new Error(\n        'Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).'\n      )\n    }\n\n    const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    return new Transaction(\n      {\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        v,\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n\n    this.common = this._validateTxV(this.v, opts.common)\n\n    this.gasPrice = new BN(toBuffer(txData.gasPrice === '' ? '0x' : txData.gasPrice))\n\n    if (this.gasPrice.mul(this.gasLimit).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n    this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice })\n\n    if (this.common.gteHardfork('spuriousDragon')) {\n      if (!this.isSigned()) {\n        this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      } else {\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n        // then when computing the hash of a transaction for purposes of signing or recovering\n        // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n        // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        const v = this.v!\n        const chainIdDoubled = this.common.chainIdBN().muln(2)\n\n        // v and chain ID meet EIP-155 conditions\n        if (v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))) {\n          this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n        }\n      }\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   *\n   * For legacy txs this is also the correct format to add transactions\n   * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n   * for typed txs).\n   *\n   * For an unsigned tx this method returns the empty Buffer values\n   * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n   * representation have a look at {@link Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the legacy transaction.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link Transaction.getMessageToSign}.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  private _getMessageToSign() {\n    const values = [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n    ]\n\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      values.push(toBuffer(this.common.chainIdBN()))\n      values.push(unpadBuffer(toBuffer(0)))\n      values.push(unpadBuffer(toBuffer(0)))\n    }\n\n    return values\n  }\n\n  /**\n   * Returns the unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: the raw message message format for the legacy tx is not RLP encoded\n   * and you might need to do yourself with:\n   *\n   * ```javascript\n   * import { rlp } from 'ethereumjs-util'\n   * const message = tx.getMessageToSign(false)\n   * const serializedMessage = rlp.encode(message) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage: false): Buffer[]\n  getMessageToSign(hashMessage?: true): Buffer\n  getMessageToSign(hashMessage = true) {\n    const message = this._getMessageToSign()\n    if (hashMessage) {\n      return rlphash(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: super.getDataFee(),\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return super.getDataFee()\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): BN {\n    return this.gasLimit.mul(this.gasPrice).add(this.value)\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  hash(): Buffer {\n    // In contrast to the tx type transaction implementations the `hash()` function\n    // for the legacy tx does not throw if the tx is not signed.\n    // This has been considered for inclusion but lead to unexpected backwards\n    // compatibility problems (no concrete reference found, needs validation).\n    //\n    // For context see also https://github.com/ethereumjs/ethereumjs-monorepo/pull/1445,\n    // September, 2021 as well as work done before.\n    //\n    // This should be updated along the next major version release by adding:\n    //\n    //if (!this.isSigned()) {\n    //  const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n    //  throw new Error(msg)\n    //}\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = rlphash(this.raw())\n      }\n      return this.cache.hash\n    }\n\n    return rlphash(this.raw())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  getMessageToVerifySignature() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const message = this._getMessageToSign()\n    return rlphash(message)\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  getSenderPublicKey(): Buffer {\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { v, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        v!,\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!),\n        this.supports(Capability.EIP155ReplayProtection) ? this.common.chainIdBN() : undefined\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * Process the v, r, s values from the `sign` method of the base transaction.\n   */\n  protected _processSignature(v: number, r: Buffer, s: Buffer) {\n    const vBN = new BN(v)\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      vBN.iadd(this.common.chainIdBN().muln(2).addn(8))\n    }\n\n    const opts = { ...this.txOptions, common: this.common }\n\n    return Transaction.fromTxData(\n      {\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        v: vBN,\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction.\n   */\n  toJSON(): JsonTx {\n    return {\n      nonce: bnToHex(this.nonce),\n      gasPrice: bnToHex(this.gasPrice),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Validates tx's `v` value\n   */\n  private _validateTxV(v?: BN, common?: Common): Common {\n    // Check for valid v values in the scope of a signed legacy tx\n    if (v !== undefined) {\n      // v is 1. not matching the EIP-155 chainId included case and...\n      // v is 2. not matching the classic v=27 or v=28 case\n      if (v.ltn(37) && !v.eqn(27) && !v.eqn(28)) {\n        throw new Error(\n          `Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`\n        )\n      }\n    }\n\n    let chainIdBN\n    // No unsigned tx and EIP-155 activated and chain ID included\n    if (\n      v !== undefined &&\n      (!common || common.gteHardfork('spuriousDragon')) &&\n      !v.eqn(27) &&\n      !v.eqn(28)\n    ) {\n      if (common) {\n        const chainIdDoubled = common.chainIdBN().muln(2)\n        const isValidEIP155V = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))\n\n        if (!isValidEIP155V) {\n          throw new Error(\n            `Incompatible EIP155-based V ${v} and chain id ${common.chainIdBN()}. See the Common parameter of the Transaction constructor to set the chain id.`\n          )\n        }\n      } else {\n        // Derive the original chain ID\n        let numSub\n        if (v.subn(35).isEven()) {\n          numSub = 35\n        } else {\n          numSub = 36\n        }\n        // Use derived chain ID to create a proper Common\n        chainIdBN = v.subn(numSub).divn(2)\n      }\n    }\n    return this._getCommon(common, chainIdBN)\n  }\n\n  /**\n   * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n   */\n  private _unsignedTxImplementsEIP155() {\n    return this.common.gteHardfork('spuriousDragon')\n  }\n\n  /**\n   * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n   */\n  private _signedTxImplementsEIP155() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const onEIP155BlockOrLater = this.common.gteHardfork('spuriousDragon')\n\n    // EIP155 spec:\n    // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n    const v = this.v!\n\n    const chainIdDoubled = this.common.chainIdBN().muln(2)\n\n    const vAndChainIdMeetEIP155Conditions =\n      v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))\n\n    return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` gasPrice=${this.gasPrice}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { BN, toBuffer } from 'ethereumjs-util'\nimport {\n  TxOptions,\n  TypedTransaction,\n  TxData,\n  AccessListEIP2930TxData,\n  FeeMarketEIP1559TxData,\n} from './types'\nimport { Transaction, AccessListEIP2930Transaction, FeeMarketEIP1559Transaction } from '.'\nimport Common from '@ethereumjs/common'\n\nexport default class TransactionFactory {\n  // It is not possible to instantiate a TransactionFactory object.\n  private constructor() {}\n\n  /**\n   * Create a transaction from a `txData` object\n   *\n   * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n   * @param txOptions - Options to pass on to the constructor of the transaction\n   */\n  public static fromTxData(\n    txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData,\n    txOptions: TxOptions = {}\n  ): TypedTransaction {\n    if (!('type' in txData) || txData.type === undefined) {\n      // Assume legacy transaction\n      return Transaction.fromTxData(<TxData>txData, txOptions)\n    } else {\n      const txType = new BN(toBuffer(txData.type)).toNumber()\n      if (txType === 0) {\n        return Transaction.fromTxData(<TxData>txData, txOptions)\n      } else if (txType === 1) {\n        return AccessListEIP2930Transaction.fromTxData(<AccessListEIP2930TxData>txData, txOptions)\n      } else if (txType === 2) {\n        return FeeMarketEIP1559Transaction.fromTxData(<FeeMarketEIP1559TxData>txData, txOptions)\n      } else {\n        throw new Error(`Tx instantiation with type ${txType} not supported`)\n      }\n    }\n  }\n\n  /**\n   * This method tries to decode serialized data.\n   *\n   * @param data - The data Buffer\n   * @param txOptions - The transaction options\n   */\n  public static fromSerializedData(data: Buffer, txOptions: TxOptions = {}): TypedTransaction {\n    if (data[0] <= 0x7f) {\n      // Determine the type.\n      let EIP: number\n      switch (data[0]) {\n        case 1:\n          EIP = 2930\n          break\n        case 2:\n          EIP = 1559\n          break\n        default:\n          throw new Error(`TypedTransaction with ID ${data[0]} unknown`)\n      }\n      if (EIP === 1559) {\n        return FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions)\n      } else {\n        // EIP === 2930\n        return AccessListEIP2930Transaction.fromSerializedTx(data, txOptions)\n      }\n    } else {\n      return Transaction.fromSerializedTx(data, txOptions)\n    }\n  }\n\n  /**\n   * When decoding a BlockBody, in the transactions field, a field is either:\n   * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n   * A Buffer[] (Legacy Transaction)\n   * This method returns the right transaction.\n   *\n   * @param data - A Buffer or Buffer[]\n   * @param txOptions - The transaction options\n   */\n  public static fromBlockBodyData(data: Buffer | Buffer[], txOptions: TxOptions = {}) {\n    if (Buffer.isBuffer(data)) {\n      return this.fromSerializedData(data, txOptions)\n    } else if (Array.isArray(data)) {\n      // It is a legacy transaction\n      return Transaction.fromValuesArray(data, txOptions)\n    } else {\n      throw new Error('Cannot decode transaction: unknown type input')\n    }\n  }\n\n  /**\n   * This helper method allows one to retrieve the class which matches the transactionID\n   * If transactionID is undefined, returns the legacy transaction class.\n   * @deprecated - This method is deprecated and will be removed on the next major release\n   * @param transactionID\n   * @param _common - This option is not used\n   */\n  public static getTransactionClass(transactionID: number = 0, _common?: Common) {\n    const legacyTxn = transactionID == 0 || (transactionID >= 0x80 && transactionID <= 0xff)\n\n    if (legacyTxn) {\n      return Transaction\n    }\n\n    switch (transactionID) {\n      case 1:\n        return AccessListEIP2930Transaction\n      case 2:\n        return FeeMarketEIP1559Transaction\n      default:\n        throw new Error(`TypedTransaction with ID ${transactionID} unknown`)\n    }\n  }\n}\n","import { BN, AddressLike, BNLike, BufferLike, PrefixedHexString } from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { default as Transaction } from './legacyTransaction'\nimport { default as AccessListEIP2930Transaction } from './eip2930Transaction'\nimport { default as FeeMarketEIP1559Transaction } from './eip1559Transaction'\n\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nexport enum Capability {\n  /**\n   * Tx supports EIP-155 replay protection\n   * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n   */\n  EIP155ReplayProtection = 155,\n\n  /**\n   * Tx supports EIP-1559 gas fee market mechansim\n   * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n   */\n  EIP1559FeeMarket = 1559,\n\n  /**\n   * Tx is a typed transaction as defined in EIP-2718\n   * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n   */\n  EIP2718TypedTransaction = 2718,\n\n  /**\n   * Tx supports access list generation as defined in EIP-2930\n   * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n   */\n  EIP2930AccessLists = 2930,\n}\n\n/**\n * The options for initializing a {@link Transaction}.\n */\nexport interface TxOptions {\n  /**\n   * A {@link Common} object defining the chain and hardfork for the transaction.\n   *\n   * Object will be internally copied so that tx behavior don't incidentally\n   * change on future HF changes.\n   *\n   * Default: {@link Common} object set to `mainnet` and the default hardfork as defined in the {@link Common} class.\n   *\n   * Current default hardfork: `istanbul`\n   */\n  common?: Common\n  /**\n   * A transaction object by default gets frozen along initialization. This gives you\n   * strong additional security guarantees on the consistency of the tx parameters.\n   * It also enables tx hash caching when the `hash()` method is called multiple times.\n   *\n   * If you need to deactivate the tx freeze - e.g. because you want to subclass tx and\n   * add additional properties - it is strongly encouraged that you do the freeze yourself\n   * within your code instead.\n   *\n   * Default: true\n   */\n  freeze?: boolean\n}\n\n/*\n * Access List types\n */\n\nexport type AccessListItem = {\n  address: PrefixedHexString\n  storageKeys: PrefixedHexString[]\n}\n\n/*\n * An Access List as a tuple of [address: Buffer, storageKeys: Buffer[]]\n */\nexport type AccessListBufferItem = [Buffer, Buffer[]]\nexport type AccessListBuffer = AccessListBufferItem[]\nexport type AccessList = AccessListItem[]\n\nexport function isAccessListBuffer(\n  input: AccessListBuffer | AccessList\n): input is AccessListBuffer {\n  if (input.length === 0) {\n    return true\n  }\n  const firstItem = input[0]\n  if (Array.isArray(firstItem)) {\n    return true\n  }\n  return false\n}\n\nexport function isAccessList(input: AccessListBuffer | AccessList): input is AccessList {\n  return !isAccessListBuffer(input) // This is exactly the same method, except the output is negated.\n}\n\n/**\n * Encompassing type for all transaction types.\n *\n * Note that this also includes legacy txs which are\n * referenced as {@link Transaction} for compatibility reasons.\n */\nexport type TypedTransaction =\n  | Transaction\n  | AccessListEIP2930Transaction\n  | FeeMarketEIP1559Transaction\n\n/**\n * Legacy {@link Transaction} Data\n */\nexport type TxData = {\n  /**\n   * The transaction's nonce.\n   */\n  nonce?: BNLike\n\n  /**\n   * The transaction's gas price.\n   */\n  gasPrice?: BNLike\n\n  /**\n   * The transaction's gas limit.\n   */\n  gasLimit?: BNLike\n\n  /**\n   * The transaction's the address is sent to.\n   */\n  to?: AddressLike\n\n  /**\n   * The amount of Ether sent.\n   */\n  value?: BNLike\n\n  /**\n   * This will contain the data of the message or the init of a contract.\n   */\n  data?: BufferLike\n\n  /**\n   * EC recovery ID.\n   */\n  v?: BNLike\n\n  /**\n   * EC signature parameter.\n   */\n  r?: BNLike\n\n  /**\n   * EC signature parameter.\n   */\n  s?: BNLike\n\n  /**\n   * The transaction type\n   */\n\n  type?: BNLike\n}\n\n/**\n * {@link AccessListEIP2930Transaction} data.\n */\nexport interface AccessListEIP2930TxData extends TxData {\n  /**\n   * The transaction's chain ID\n   */\n  chainId?: BNLike\n\n  /**\n   * The access list which contains the addresses/storage slots which the transaction wishes to access\n   */\n  accessList?: AccessListBuffer | AccessList\n}\n\n/**\n * {@link FeeMarketEIP1559Transaction} data.\n */\nexport interface FeeMarketEIP1559TxData extends AccessListEIP2930TxData {\n  /**\n   * The transaction's gas price, inherited from {@link Transaction}.  This property is not used for EIP1559\n   * transactions and should always be undefined for this specific transaction type.\n   */\n  gasPrice?: never\n  /**\n   * The maximum inclusion fee per gas (this fee is given to the miner)\n   */\n  maxPriorityFeePerGas?: BNLike\n  /**\n   * The maximum total fee\n   */\n  maxFeePerGas?: BNLike\n}\n\n/**\n * Buffer values array for a legacy {@link Transaction}\n */\nexport type TxValuesArray = Buffer[]\n\n/**\n * Buffer values array for an {@link AccessListEIP2930Transaction}\n */\nexport type AccessListEIP2930ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\n/**\n * Buffer values array for a {@link FeeMarketEIP1559Transaction}\n */\nexport type FeeMarketEIP1559ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\ntype JsonAccessListItem = { address: string; storageKeys: string[] }\n\n/**\n * Generic interface for all tx types with a\n * JSON representation of a transaction.\n *\n * Note that all values are marked as optional\n * and not all the values are present on all tx types\n * (an EIP1559 tx e.g. lacks a `gasPrice`).\n */\nexport interface JsonTx {\n  nonce?: string\n  gasPrice?: string\n  gasLimit?: string\n  to?: string\n  data?: string\n  v?: string\n  r?: string\n  s?: string\n  value?: string\n  chainId?: string\n  accessList?: JsonAccessListItem[]\n  type?: string\n  maxPriorityFeePerGas?: string\n  maxFeePerGas?: string\n}\n\n/**\n * A const defining secp256k1n/2\n */\nexport const N_DIV_2 = new BN(\n  '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n  16\n)\n","import Common from '@ethereumjs/common'\nimport { bufferToHex, setLengthLeft, toBuffer } from 'ethereumjs-util'\nimport { AccessList, AccessListBuffer, AccessListItem, isAccessList } from './types'\n\nexport function checkMaxInitCodeSize(common: Common, length: number) {\n  if (length > common.param('vm', 'maxInitCodeSize')) {\n    throw new Error(\n      `the initcode size of this transaction is too large: it is ${length} while the max is ${common.param(\n        'vm',\n        'maxInitCodeSize'\n      )}`\n    )\n  }\n}\n\nexport class AccessLists {\n  public static getAccessListData(accessList: AccessListBuffer | AccessList) {\n    let AccessListJSON\n    let bufferAccessList\n    if (accessList && isAccessList(accessList)) {\n      AccessListJSON = accessList\n      const newAccessList: AccessListBuffer = []\n\n      for (let i = 0; i < accessList.length; i++) {\n        const item: AccessListItem = accessList[i]\n        const addressBuffer = toBuffer(item.address)\n        const storageItems: Buffer[] = []\n        for (let index = 0; index < item.storageKeys.length; index++) {\n          storageItems.push(toBuffer(item.storageKeys[index]))\n        }\n        newAccessList.push([addressBuffer, storageItems])\n      }\n      bufferAccessList = newAccessList\n    } else {\n      bufferAccessList = accessList ?? []\n      // build the JSON\n      const json: AccessList = []\n      for (let i = 0; i < bufferAccessList.length; i++) {\n        const data = bufferAccessList[i]\n        const address = bufferToHex(data[0])\n        const storageKeys: string[] = []\n        for (let item = 0; item < data[1].length; item++) {\n          storageKeys.push(bufferToHex(data[1][item]))\n        }\n        const jsonItem: AccessListItem = {\n          address,\n          storageKeys,\n        }\n        json.push(jsonItem)\n      }\n      AccessListJSON = json\n    }\n\n    return {\n      AccessListJSON,\n      accessList: bufferAccessList,\n    }\n  }\n\n  public static verifyAccessList(accessList: AccessListBuffer) {\n    for (let key = 0; key < accessList.length; key++) {\n      const accessListItem = accessList[key]\n      const address = <Buffer>accessListItem[0]\n      const storageSlots = <Buffer[]>accessListItem[1]\n      if ((<any>accessListItem)[2] !== undefined) {\n        throw new Error(\n          'Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.'\n        )\n      }\n      if (address.length != 20) {\n        throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes')\n      }\n      for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n        if (storageSlots[storageSlot].length != 32) {\n          throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes')\n        }\n      }\n    }\n  }\n\n  public static getAccessListJSON(accessList: AccessListBuffer) {\n    const accessListJSON = []\n    for (let index = 0; index < accessList.length; index++) {\n      const item: any = accessList[index]\n      const JSONItem: any = {\n        address: '0x' + setLengthLeft(<Buffer>item[0], 20).toString('hex'),\n        storageKeys: [],\n      }\n      const storageSlots: Buffer[] = item[1]\n      for (let slot = 0; slot < storageSlots.length; slot++) {\n        const storageSlot = storageSlots[slot]\n        JSONItem.storageKeys.push('0x' + setLengthLeft(storageSlot, 32).toString('hex'))\n      }\n      accessListJSON.push(JSONItem)\n    }\n    return accessListJSON\n  }\n\n  public static getDataFeeEIP2930(accessList: AccessListBuffer, common: Common): number {\n    const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost')\n    const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost')\n\n    let slots = 0\n    for (let index = 0; index < accessList.length; index++) {\n      const item = accessList[index]\n      const storageSlots = item[1]\n      slots += storageSlots.length\n    }\n\n    const addresses = accessList.length\n    return addresses * accessListAddressCost + slots * accessListStorageKeyCost\n  }\n}\n","import * as nacl from 'tweetnacl';\nimport * as naclUtil from 'tweetnacl-util';\n\nimport { isNullish } from './utils';\n\nexport interface EthEncryptedData {\n  version: string;\n  nonce: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n}\n\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encrypt({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  switch (version) {\n    case 'x25519-xsalsa20-poly1305': {\n      if (typeof data !== 'string') {\n        throw new Error('Message data must be given as a string');\n      }\n      // generate ephemeral keypair\n      const ephemeralKeyPair = nacl.box.keyPair();\n\n      // assemble encryption parameters - from string to UInt8\n      let pubKeyUInt8Array;\n      try {\n        pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n      } catch (err) {\n        throw new Error('Bad public key');\n      }\n\n      const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n      const nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n      // encrypt\n      const encryptedMessage = nacl.box(\n        msgParamsUInt8Array,\n        nonce,\n        pubKeyUInt8Array,\n        ephemeralKeyPair.secretKey,\n      );\n\n      // handle encrypted data\n      const output = {\n        version: 'x25519-xsalsa20-poly1305',\n        nonce: naclUtil.encodeBase64(nonce),\n        ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n        ciphertext: naclUtil.encodeBase64(encryptedMessage),\n      };\n      // return encrypted msg data\n      return output;\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported');\n  }\n}\n\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encryptSafely({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  const DEFAULT_PADDING_LENGTH = 2 ** 11;\n  const NACL_EXTRA_BYTES = 16;\n\n  if (typeof data === 'object' && 'toJSON' in data) {\n    // remove toJSON attack vector\n    // TODO, check all possible children\n    throw new Error(\n      'Cannot encrypt with toJSON property.  Please remove toJSON property',\n    );\n  }\n\n  // add padding\n  const dataWithPadding = {\n    data,\n    padding: '',\n  };\n\n  // calculate padding\n  const dataLength = Buffer.byteLength(\n    JSON.stringify(dataWithPadding),\n    'utf-8',\n  );\n  const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n  let padLength = 0;\n  // Only pad if necessary\n  if (modVal > 0) {\n    padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n  }\n  dataWithPadding.padding = '0'.repeat(padLength);\n\n  const paddedMessage = JSON.stringify(dataWithPadding);\n  return encrypt({ publicKey, data: paddedMessage, version });\n}\n\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decrypt({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  switch (encryptedData.version) {\n    case 'x25519-xsalsa20-poly1305': {\n      // string to buffer to UInt8Array\n      const recieverPrivateKeyUint8Array = nacl_decodeHex(privateKey);\n      const recieverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(\n        recieverPrivateKeyUint8Array,\n      ).secretKey;\n\n      // assemble decryption parameters\n      const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n      const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n      const ephemPublicKey = naclUtil.decodeBase64(\n        encryptedData.ephemPublicKey,\n      );\n\n      // decrypt\n      const decryptedMessage = nacl.box.open(\n        ciphertext,\n        nonce,\n        ephemPublicKey,\n        recieverEncryptionPrivateKey,\n      );\n\n      // return decrypted msg data\n      let output;\n      try {\n        output = naclUtil.encodeUTF8(decryptedMessage);\n      } catch (err) {\n        throw new Error('Decryption failed.');\n      }\n\n      if (output) {\n        return output;\n      }\n      throw new Error('Decryption failed.');\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported.');\n  }\n}\n\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decryptSafely({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n  return dataWithPadding.data;\n}\n\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nexport function getEncryptionPublicKey(privateKey: string): string {\n  const privateKeyUint8Array = nacl_decodeHex(privateKey);\n  const encryptionPublicKey =\n    nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n  return naclUtil.encodeBase64(encryptionPublicKey);\n}\n\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction nacl_decodeHex(msgHex: string): Uint8Array {\n  const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n  return naclUtil.decodeBase64(msgBase64);\n}\n","export * from './personal-sign';\nexport * from './sign-typed-data';\nexport * from './encryption';\nexport { concatSig, normalize } from './utils';\n","import {\n  bufferToHex,\n  ecsign,\n  hashPersonalMessage,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function personalSign({\n  privateKey,\n  data,\n}: {\n  privateKey: Buffer;\n  data: unknown;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const message = legacyToBuffer(data);\n  const msgHash = hashPersonalMessage(message);\n  const sig = ecsign(msgHash, privateKey);\n  const serialized = concatSig(toBuffer(sig.v), sig.r, sig.s);\n  return serialized;\n}\n\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nexport function recoverPersonalSignature({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  const sender = publicToAddress(publicKey);\n  const senderHex = bufferToHex(sender);\n  return senderHex;\n}\n\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nexport function extractPublicKey({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  return `0x${publicKey.toString('hex')}`;\n}\n\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(message: unknown, signature: string): Buffer {\n  const messageHash = hashPersonalMessage(legacyToBuffer(message));\n  return recoverPublicKey(messageHash, signature);\n}\n","import {\n  bufferToHex,\n  ecsign,\n  keccak,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\nimport { rawEncode, soliditySHA3 } from 'ethereumjs-abi';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * This is the message format used for `V1` of `signTypedData`.\n */\nexport type TypedDataV1 = TypedDataV1Field[];\n\n/**\n * This represents a single field in a `V1` `signTypedData` message.\n *\n * @property name - The name of the field.\n * @property type - The type of a field (must be a supported Solidity type).\n * @property value - The value of the field.\n */\nexport interface TypedDataV1Field {\n  name: string;\n  type: string;\n  value: any;\n}\n\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nexport enum SignTypedDataVersion {\n  V1 = 'V1',\n  V3 = 'V3',\n  V4 = 'V4',\n}\n\nexport interface MessageTypeProperty {\n  name: string;\n  type: string;\n}\n\nexport interface MessageTypes {\n  EIP712Domain: MessageTypeProperty[];\n  [additionalProperties: string]: MessageTypeProperty[];\n}\n\n/**\n * This is the message format used for `signTypeData`, for all versions\n * except `V1`.\n *\n * @template T - The custom types used by this message.\n * @property types - The custom types used by this message.\n * @property primaryType - The type of the message.\n * @property domain - Signing domain metadata. The signing domain is the intended context for the\n * signature (e.g. the dapp, protocol, etc. that it's intended for). This data is used to\n * construct the domain seperator of the message.\n * @property domain.name - The name of the signing domain.\n * @property domain.version - The current major version of the signing domain.\n * @property domain.chainId - The chain ID of the signing domain.\n * @property domain.verifyingContract - The address of the contract that can verify the signature.\n * @property domain.salt - A disambiguating salt for the protocol.\n * @property message - The message to be signed.\n */\nexport interface TypedMessage<T extends MessageTypes> {\n  types: T;\n  primaryType: keyof T;\n  domain: {\n    name?: string;\n    version?: string;\n    chainId?: number;\n    verifyingContract?: string;\n    salt?: ArrayBuffer;\n  };\n  message: Record<string, unknown>;\n}\n\nexport const TYPED_MESSAGE_SCHEMA = {\n  type: 'object',\n  properties: {\n    types: {\n      type: 'object',\n      additionalProperties: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            name: { type: 'string' },\n            type: { type: 'string' },\n          },\n          required: ['name', 'type'],\n        },\n      },\n    },\n    primaryType: { type: 'string' },\n    domain: { type: 'object' },\n    message: { type: 'object' },\n  },\n  required: ['types', 'primaryType', 'domain', 'message'],\n};\n\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(\n  version: SignTypedDataVersion,\n  allowedVersions?: SignTypedDataVersion[],\n) {\n  if (!Object.keys(SignTypedDataVersion).includes(version)) {\n    throw new Error(`Invalid version: '${version}'`);\n  } else if (allowedVersions && !allowedVersions.includes(version)) {\n    throw new Error(\n      `SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(\n        ', ',\n      )}`,\n    );\n  }\n}\n\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(\n  types: Record<string, MessageTypeProperty[]>,\n  name: string,\n  type: string,\n  value: any,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): [type: string, value: any] {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  if (types[type] !== undefined) {\n    return [\n      'bytes32',\n      version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n        ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n        : keccak(encodeData(type, value, types, version)),\n    ];\n  }\n\n  if (value === undefined) {\n    throw new Error(`missing value for field ${name} of type ${type}`);\n  }\n\n  if (type === 'bytes') {\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type === 'string') {\n    // convert string to buffer - prevents ethUtil from interpreting strings like '0xabcd' as hex\n    if (typeof value === 'string') {\n      value = Buffer.from(value, 'utf8');\n    }\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    if (version === SignTypedDataVersion.V3) {\n      throw new Error(\n        'Arrays are unimplemented in encodeData; use V4 extension',\n      );\n    }\n    const parsedType = type.slice(0, type.lastIndexOf('['));\n    const typeValuePairs = value.map((item) =>\n      encodeField(types, name, parsedType, item, version),\n    );\n    return [\n      'bytes32',\n      keccak(\n        rawEncode(\n          typeValuePairs.map(([t]) => t),\n          typeValuePairs.map(([, v]) => v),\n        ),\n      ),\n    ];\n  }\n\n  return [type, value];\n}\n\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encodedTypes = ['bytes32'];\n  const encodedValues: unknown[] = [hashType(primaryType, types)];\n\n  for (const field of types[primaryType]) {\n    if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n      continue;\n    }\n    const [type, value] = encodeField(\n      types,\n      field.name,\n      field.type,\n      data[field.name],\n      version,\n    );\n    encodedTypes.push(type);\n    encodedValues.push(value);\n  }\n\n  return rawEncode(encodedTypes, encodedValues);\n}\n\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): string {\n  let result = '';\n  const unsortedDeps = findTypeDependencies(primaryType, types);\n  unsortedDeps.delete(primaryType);\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n  for (const type of deps) {\n    const children = types[type];\n    if (!children) {\n      throw new Error(`No type definition specified: ${type}`);\n    }\n\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`;\n  }\n\n  return result;\n}\n\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n  results: Set<string> = new Set(),\n): Set<string> {\n  [primaryType] = primaryType.match(/^\\w*/u);\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results;\n  }\n\n  results.add(primaryType);\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies(field.type, types, results);\n  }\n  return results;\n}\n\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  return keccak(encodeData(primaryType, data, types, version));\n}\n\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): Buffer {\n  return keccak(encodeType(primaryType, types));\n}\n\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData<T extends MessageTypes>(\n  data: TypedMessage<T>,\n): TypedMessage<T> {\n  const sanitizedData: Partial<TypedMessage<T>> = {};\n  for (const key in TYPED_MESSAGE_SCHEMA.properties) {\n    if (data[key]) {\n      sanitizedData[key] = data[key];\n    }\n  }\n\n  if ('types' in sanitizedData) {\n    sanitizedData.types = { EIP712Domain: [], ...sanitizedData.types };\n  }\n  return sanitizedData as Required<TypedMessage<T>>;\n}\n\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const parts = [Buffer.from('1901', 'hex')];\n  parts.push(\n    hashStruct(\n      'EIP712Domain',\n      sanitizedData.domain,\n      sanitizedData.types,\n      version,\n    ),\n  );\n\n  if (sanitizedData.primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType as string,\n        sanitizedData.message,\n        sanitizedData.types,\n        version,\n      ),\n    );\n  }\n  return keccak(Buffer.concat(parts));\n}\n\n/**\n * A collection of utility functions used for signing typed data.\n */\nexport const TypedDataUtils = {\n  encodeData,\n  encodeType,\n  findTypeDependencies,\n  hashStruct,\n  hashType,\n  sanitizeData,\n  eip712Hash,\n};\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nexport function typedSignatureHash(typedData: TypedDataV1Field[]): string {\n  const hashBuffer = _typedSignatureHash(typedData);\n  return bufferToHex(hashBuffer);\n}\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData: TypedDataV1): Buffer {\n  const error = new Error('Expect argument to be non-empty array');\n  if (\n    typeof typedData !== 'object' ||\n    !('length' in typedData) ||\n    !typedData.length\n  ) {\n    throw error;\n  }\n\n  const data = typedData.map(function (e) {\n    if (e.type !== 'bytes') {\n      return e.value;\n    }\n\n    return legacyToBuffer(e.value);\n  });\n  const types = typedData.map(function (e) {\n    return e.type;\n  });\n  const schema = typedData.map(function (e) {\n    if (!e.name) {\n      throw error;\n    }\n    return `${e.type} ${e.name}`;\n  });\n\n  return soliditySHA3(\n    ['bytes32', 'bytes32'],\n    [\n      soliditySHA3(new Array(typedData.length).fill('string'), schema),\n      soliditySHA3(types, data),\n    ],\n  );\n}\n\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function signTypedData<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  privateKey,\n  data,\n  version,\n}: {\n  privateKey: Buffer;\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing private key parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const sig = ecsign(messageHash, privateKey);\n  return concatSig(toBuffer(sig.v), sig.r, sig.s);\n}\n\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nexport function recoverTypedSignature<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  data,\n  signature,\n  version,\n}: {\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  signature: string;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const publicKey = recoverPublicKey(messageHash, signature);\n  const sender = publicToAddress(publicKey);\n  return bufferToHex(sender);\n}\n","import {\n  addHexPrefix,\n  bufferToHex,\n  bufferToInt,\n  ecrecover,\n  fromRpcSig,\n  fromSigned,\n  toBuffer,\n  toUnsigned,\n} from 'ethereumjs-util';\nimport { intToHex, isHexString, stripHexPrefix } from 'ethjs-util';\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(\n      `Expected an unprefixed hex string. Received: ${hexString}`,\n    );\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\n      `Expected a non-negative integer target length. Received: ${targetLength}`,\n    );\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, '0');\n}\n\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nexport function isNullish(value) {\n  return value === null || value === undefined;\n}\n\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nexport function legacyToBuffer(value: unknown) {\n  return typeof value === 'string' && !isHexString(value)\n    ? Buffer.from(value)\n    : toBuffer(value);\n}\n\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString('hex'), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString('hex'), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nexport function recoverPublicKey(\n  messageHash: Buffer,\n  signature: string,\n): Buffer {\n  const sigParams = fromRpcSig(signature);\n  return ecrecover(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\n\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nexport function normalize(input: number | string): string {\n  if (!input) {\n    return undefined;\n  }\n\n  if (typeof input === 'number') {\n    const buffer = toBuffer(input);\n    input = bufferToHex(buffer);\n  }\n\n  if (typeof input !== 'string') {\n    let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n    msg += ` received ${typeof input}: ${input}`;\n    throw new Error(msg);\n  }\n\n  return addHexPrefix(input.toLowerCase());\n}\n",null,null,null,null,null,null,null,null,null,null,"/*\r\n *      bignumber.js v9.1.0\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, P.lt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, P.gt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  function maxOrMin(args, method) {\r\n    var n,\r\n      i = 1,\r\n      m = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      n = new BigNumber(args[i]);\r\n\r\n      // If any number is NaN, return NaN.\r\n      if (!n.s) {\r\n        m = n;\r\n        break;\r\n      } else if (method.call(m, n)) {\r\n        m = n;\r\n      }\r\n    }\r\n\r\n    return m;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = n / pows10[d - j - 1] % 10 | 0;\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n","import type { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { createAsyncMiddleware, createScaffoldMiddleware, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport type { MessageParams, TransactionParams, TypedMessageParams, WalletMiddlewareOptions } from \"./interfaces\";\n\nfunction resemblesAddress(str: string): boolean {\n  // hex prefix 2 + 20 bytes\n  return str.length === 2 + 20 * 2;\n}\n\nexport function createWalletMiddleware({\n  getAccounts,\n  getPrivateKey,\n  processDecryptMessage,\n  processEncryptionPublicKey,\n  processEthSignMessage,\n  processPersonalMessage,\n  processTransaction,\n  processSignTransaction,\n  processTypedMessage,\n  processTypedMessageV3,\n  processTypedMessageV4,\n}: WalletMiddlewareOptions): JRPCMiddleware<string, unknown> {\n  if (!getAccounts) {\n    throw new Error(\"opts.getAccounts is required\");\n  }\n\n  //\n  // utility\n  //\n\n  /**\n   * Validates the keyholder address, and returns a normalized (i.e. lowercase)\n   * copy of it.\n   *\n   * an error\n   */\n  async function validateAndNormalizeKeyholder(address: string, req: JRPCRequest<unknown>): Promise<string> {\n    if (typeof address === \"string\" && address.length > 0) {\n      // ensure address is included in provided accounts\n      const accounts: string[] = await getAccounts(req);\n      const normalizedAccounts: string[] = accounts.map((_address) => _address.toLowerCase());\n      const normalizedAddress: string = address.toLowerCase();\n\n      if (normalizedAccounts.includes(normalizedAddress)) {\n        return normalizedAddress;\n      }\n    }\n    throw ethErrors.rpc.invalidParams({\n      message: `Invalid parameters: must provide an Ethereum address.`,\n    });\n  }\n\n  //\n  // account lookups\n  //\n\n  async function lookupAccounts(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    res.result = await getAccounts(req);\n  }\n\n  async function lookupDefaultAccount(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const accounts = await getAccounts(req);\n    res.result = accounts[0] || null;\n  }\n\n  //\n  // transaction signatures\n  //\n\n  async function sendTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processTransaction(txParams, req);\n  }\n\n  async function signTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processSignTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processSignTransaction(txParams, req);\n  }\n\n  //\n  // message signatures\n  //\n\n  async function ethSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEthSignMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: string = (req.params as string[])[1];\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processEthSignMessage(msgParams, req);\n  }\n\n  async function signTypedData(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const message: TypedDataV1 = (req.params as TypedDataV1[])[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[1], req);\n    const version = \"V1\";\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<TypedDataV1> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processTypedMessage(msgParams, req, version);\n  }\n\n  async function signTypedDataV3(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV3) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V3\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV3(msgParams, req, version);\n  }\n\n  async function signTypedDataV4(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV4) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V4\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV4(msgParams, req, version);\n  }\n\n  async function personalSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processPersonalMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    // process normally\n    const firstParam: string = (req.params as string[])[0];\n    const secondParam: string = (req.params as string[])[1];\n    // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n\n    // We initially incorrectly ordered these parameters.\n    // To gracefully respect users who adopted this API early,\n    // we are currently gracefully recovering from the wrong param order\n    // when it is clearly identifiable.\n    //\n    // That means when the first param is definitely an address,\n    // and the second param is definitely not, but is hex.\n    let address: string, message: string;\n    if (resemblesAddress(firstParam) && !resemblesAddress(secondParam)) {\n      let warning = `The eth_personalSign method requires params ordered `;\n      warning += `[message, address]. This was previously handled incorrectly, `;\n      warning += `and has been corrected automatically. `;\n      warning += `Please switch this param order for smooth behavior in the future.`;\n      (res as any).warning = warning;\n\n      address = firstParam;\n      message = secondParam;\n    } else {\n      message = firstParam;\n      address = secondParam;\n    }\n    address = await validateAndNormalizeKeyholder(address, req);\n\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    // eslint-disable-next-line require-atomic-updates\n    res.result = await processPersonalMessage(msgParams, req);\n  }\n\n  async function encryptionPublicKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEncryptionPublicKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[0], req);\n\n    res.result = await processEncryptionPublicKey(address, req);\n  }\n\n  async function decryptMessage(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processDecryptMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const ciphertext: string = (req.params as string)[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[1], req);\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: ciphertext,\n    };\n\n    res.result = processDecryptMessage(msgParams, req);\n  }\n\n  async function fetchPrivateKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!getPrivateKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n    res.result = getPrivateKey(req);\n  }\n\n  return createScaffoldMiddleware({\n    // account lookups\n    eth_accounts: createAsyncMiddleware(lookupAccounts),\n    eth_private_key: createAsyncMiddleware(fetchPrivateKey),\n    eth_coinbase: createAsyncMiddleware(lookupDefaultAccount),\n    // tx signatures\n    eth_sendTransaction: createAsyncMiddleware(sendTransaction),\n    eth_signTransaction: createAsyncMiddleware(signTransaction),\n    // message signatures\n    eth_sign: createAsyncMiddleware(ethSign),\n    eth_signTypedData: createAsyncMiddleware(signTypedData),\n    eth_signTypedData_v3: createAsyncMiddleware(signTypedDataV3),\n    eth_signTypedData_v4: createAsyncMiddleware(signTypedDataV4),\n    personal_sign: createAsyncMiddleware(personalSign),\n    eth_getEncryptionPublicKey: createAsyncMiddleware(encryptionPublicKey),\n    eth_decrypt: createAsyncMiddleware(decryptMessage),\n  });\n}\n","import {\n  createAsyncMiddleware,\n  createScaffoldMiddleware,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  mergeMiddleware,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers, IProviderHandlers } from \"./interfaces\";\nimport { createWalletMiddleware } from \"./walletMidddleware\";\n\nexport function createEthMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const {\n    getAccounts,\n    getPrivateKey,\n    processTransaction,\n    processSignTransaction,\n    processEthSignMessage,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4,\n    processPersonalMessage,\n    processEncryptionPublicKey,\n    processDecryptMessage,\n  } = providerHandlers;\n  const ethMiddleware = mergeMiddleware([\n    createScaffoldMiddleware({\n      eth_syncing: false,\n    }),\n    createWalletMiddleware({\n      getAccounts,\n      getPrivateKey,\n      processTransaction,\n      processEthSignMessage,\n      processSignTransaction,\n      processTypedMessage,\n      processTypedMessageV3,\n      processTypedMessageV4,\n      processPersonalMessage,\n      processEncryptionPublicKey,\n      processDecryptMessage,\n    }),\n  ]);\n  return ethMiddleware;\n}\n\nexport function createChainSwitchMiddleware({ addChain, switchChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  async function addNewChain(req: JRPCRequest<AddEthereumChainParameter[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chain params\");\n    if (!chainParams.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n    if (!chainParams.rpcUrls || chainParams.rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n    if (!chainParams.nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n\n    res.result = await addChain(chainParams);\n  }\n  async function updateChain(req: JRPCRequest<{ chainId: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n    res.result = await switchChain(chainParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_addEthereumChain: createAsyncMiddleware(addNewChain),\n    wallet_switchEthereumChain: createAsyncMiddleware(updateChain),\n  });\n}\n\n// #region account middlewares\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  async function updateAccount(req: JRPCRequest<{ privateKey: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const accountParams = req.params?.length ? req.params[0] : undefined;\n    if (!accountParams?.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n    res.result = await updatePrivatekey(accountParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_updateAccount: createAsyncMiddleware(updateAccount),\n  });\n}\n\n// #endregion account middlewares\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport type { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: CustomChainConfig): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<CustomChainConfig>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createJsonRpcClient(providerConfig: CustomChainConfig): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { chainId, rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector, ITxData } from \"@walletconnect/types\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\n\nexport function getProviderHandlers({ connector }: { connector: IConnector }): IProviderHandlers {\n  return {\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getAccounts: async (_: JRPCRequest<unknown>) => {\n      const { accounts } = connector;\n      if (accounts && accounts.length) {\n        return accounts;\n      }\n      throw new Error(\"Failed to get accounts\");\n    },\n    processTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.sendTransaction(txParams as ITxData);\n      return result;\n    },\n    processSignTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTransaction(txParams as ITxData);\n      return result;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signMessage([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signPersonalMessage([msgParams.data, msgParams.from]);\n      return result;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processEncryptionPublicKey: async (_: string): Promise<string> => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    processDecryptMessage: (_: MessageParams<string>): string => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n  };\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector } from \"@walletconnect/types\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, getChainConfig, isHexStrict, log, WalletInitializationError, WalletLoginError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./walletConnectUtils\";\n\nexport interface WalletConnectProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface WalletConnectProviderState extends BaseProviderState {\n  accounts: string[];\n}\n\nexport class WalletConnectProvider extends BaseProvider<BaseProviderConfig, WalletConnectProviderState, IConnector> {\n  private connector: IConnector | null = null;\n\n  constructor({ config, state, connector }: { config: WalletConnectProviderConfig; state?: BaseProviderState; connector?: IConnector }) {\n    super({\n      config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 }, skipLookupNetwork: !!config.skipLookupNetwork },\n      state: { ...(state || {}), chainId: \"loading\", accounts: [] },\n    });\n    this.connector = connector || null;\n  }\n\n  public static getProviderInstance = async (params: {\n    connector: IConnector;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n    skipLookupNetwork: boolean;\n  }): Promise<WalletConnectProvider> => {\n    const providerFactory = new WalletConnectProvider({ config: { chainConfig: params.chainConfig, skipLookupNetwork: params.skipLookupNetwork } });\n    await providerFactory.setupProvider(params.connector);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    await this.setupProvider(this.connector);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(connector: IConnector): Promise<void> {\n    this.onConnectorStateUpdate(connector);\n    await this.setupEngine(connector);\n  }\n\n  public async switchChain({ chainId, addChain = true, lookup = true }: { chainId: string; addChain?: boolean; lookup?: boolean }): Promise<void> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    const currentChainConfig = this.getChainConfig(chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    const { rpcTarget, displayName } = currentChainConfig;\n    if (addChain) {\n      try {\n        await this.connector.sendCustomRequest({\n          method: \"wallet_addEthereumChain\",\n          params: [{ chainId, chainName: displayName, rpcUrls: [rpcTarget] }],\n        });\n      } catch (error) {\n        log.error(error);\n      }\n    }\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId }],\n      });\n    } catch (error) {\n      log.error(error);\n      // ignore this error because metamask & others return provider.result as null\n      // wallet connect thinks this is wrong\n      if (error.message !== \"JSON RPC response format is invalid\") {\n        throw error;\n      }\n    }\n\n    this.configure({ chainConfig: currentChainConfig });\n    if (lookup) await this.lookupNetwork(this.connector);\n  }\n\n  async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    const { rpcTarget, displayName } = chainConfig;\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_addEthereumChain\",\n        params: [{ chainId: chainConfig.chainId, chainName: displayName, rpcUrls: [rpcTarget] }],\n      });\n      super.addChain(chainConfig);\n    } catch (error) {\n      log.error(error);\n      throw error;\n    }\n  }\n\n  protected async lookupNetwork(connector: IConnector): Promise<string> {\n    if (!connector.connected) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    const connectedHexChainId = isHexStrict(connector.chainId.toString()) ? connector.chainId : `0x${connector.chainId.toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.provider.emit(\"connect\", { chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return connectedHexChainId;\n  }\n\n  private async setupEngine(connector: IConnector): Promise<void> {\n    const providerHandlers = getProviderHandlers({ connector });\n    this.update({\n      accounts: connector.accounts || [],\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    if (!this.config.skipLookupNetwork) await this.lookupNetwork(connector);\n  }\n\n  private async onConnectorStateUpdate(connector: IConnector) {\n    connector.on(\"session_update\", async (error: Error | null, payload) => {\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n      if (error) {\n        this.provider.emit(\"error\", error);\n        return;\n      }\n      const { accounts, chainId: connectedChainId, rpcUrl }: { accounts?: string[]; chainId?: number; rpcUrl?: string } = payload.params[0];\n      // Check if accounts changed and trigger event\n      if (accounts?.length && this.state.accounts[0] !== accounts[0]) {\n        this.update({\n          accounts,\n        });\n        // await this.setupEngine(connector);\n        this.provider.emit(\"accountsChanged\", accounts);\n      }\n      const connectedHexChainId = `0x${connectedChainId.toString(16)}`;\n      // Check if chainId changed and trigger event\n      if (connectedChainId && this.state.chainId !== connectedHexChainId) {\n        const maybeConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, connectedChainId) || {};\n        // Handle rpcUrl update\n        this.configure({\n          chainConfig: { ...maybeConfig, chainId: connectedHexChainId, rpcTarget: rpcUrl, chainNamespace: CHAIN_NAMESPACES.EIP155 },\n        });\n        await this.setupEngine(connector);\n      }\n    });\n  }\n}\n","import BigNumber from \"bignumber.js\";\nimport { stripHexPrefix } from \"ethereumjs-util\";\n\ntype DenominationType = \"WEI\" | \"GWEI\" | \"ETH\";\ntype NumericBaseType = \"hex\" | \"dec\";\n\ntype ConverterInput = {\n  value: string | BigNumber;\n  fromNumericBase: NumericBaseType;\n  fromDenomination?: DenominationType;\n  toNumericBase?: NumericBaseType;\n  toDenomination?: DenominationType;\n  numberOfDecimals?: number;\n};\n// Big Number Constants\nconst BIG_NUMBER_WEI_MULTIPLIER = new BigNumber(\"1e18\");\nconst BIG_NUMBER_GWEI_MULTIPLIER = new BigNumber(\"1e9\");\nconst BIG_NUMBER_ETH_MULTIPLIER = new BigNumber(\"1\");\n\n// Setter Maps\nconst toBigNumber: Record<NumericBaseType, (n: string | BigNumber) => BigNumber> = {\n  hex: (n: string | BigNumber) => (typeof n === \"string\" ? new BigNumber(stripHexPrefix(n), 16) : new BigNumber(n, 16)),\n  dec: (n: string | BigNumber) => new BigNumber(n, 10),\n};\nconst toNormalizedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.div(BIG_NUMBER_WEI_MULTIPLIER),\n  GWEI: (bigNumber) => bigNumber.div(BIG_NUMBER_GWEI_MULTIPLIER),\n  ETH: (bigNumber) => bigNumber.div(BIG_NUMBER_ETH_MULTIPLIER),\n};\nconst toSpecifiedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.times(BIG_NUMBER_WEI_MULTIPLIER).dp(0, BigNumber.ROUND_HALF_UP),\n  GWEI: (bigNumber) => bigNumber.times(BIG_NUMBER_GWEI_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n  ETH: (bigNumber) => bigNumber.times(BIG_NUMBER_ETH_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n};\nconst baseChange: Record<string, (n: BigNumber) => string> = {\n  hex: (n) => n.toString(16),\n  dec: (n) => new BigNumber(n).toString(10),\n};\n\nconst converter = (params: ConverterInput): string | BigNumber => {\n  const { value, fromNumericBase, fromDenomination, toNumericBase, toDenomination, numberOfDecimals } = params;\n  let convertedValue: string | BigNumber = toBigNumber[fromNumericBase](value);\n\n  if (fromDenomination) {\n    convertedValue = toNormalizedDenomination[fromDenomination](convertedValue as BigNumber);\n  }\n\n  if (toDenomination) {\n    convertedValue = toSpecifiedDenomination[toDenomination](convertedValue as BigNumber);\n  }\n\n  if (numberOfDecimals) {\n    convertedValue = (convertedValue as BigNumber).dp(numberOfDecimals, BigNumber.ROUND_HALF_DOWN);\n  }\n\n  if (toNumericBase) {\n    convertedValue = baseChange[toNumericBase](convertedValue);\n  }\n  return convertedValue;\n};\n\nconst conversionUtil = (\n  value: string | BigNumber,\n  { fromNumericBase = \"hex\", toNumericBase, fromDenomination, toDenomination, numberOfDecimals }: Partial<ConverterInput>\n): BigNumber | string => {\n  return converter({\n    fromNumericBase,\n    toNumericBase,\n    fromDenomination,\n    toDenomination,\n    numberOfDecimals,\n    value: value || \"0\",\n  });\n};\n\nfunction decGWEIToHexWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"dec\",\n    toNumericBase: \"hex\",\n    fromDenomination: \"GWEI\",\n    toDenomination: \"WEI\",\n  }) as string;\n}\n\nfunction hexWEIToDecGWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"hex\",\n    toNumericBase: \"dec\",\n    fromDenomination: \"WEI\",\n    toDenomination: \"GWEI\",\n  }) as string;\n}\n\nexport { conversionUtil, decGWEIToHexWEI, hexWEIToDecGWEI };\n","import { SignTypedDataVersion, TYPED_MESSAGE_SCHEMA, TypedDataV1Field, typedSignatureHash } from \"@metamask/eth-sig-util\";\nimport { get } from \"@toruslabs/http-helpers\";\nimport { isHexStrict } from \"@web3auth/base\";\nimport assert from \"assert\";\nimport { BigNumber } from \"bignumber.js\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { isValidAddress } from \"ethereumjs-util\";\nimport jsonschema from \"jsonschema\";\n\nimport { TypedMessageParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { EIP1159GasData, LegacyGasData } from \"./interfaces\";\n\nexport function normalizeGWEIDecimalNumbers(n: string | BigNumber): string {\n  const numberAsWEIHex = decGWEIToHexWEI(n);\n  const numberAsGWEI = hexWEIToDecGWEI(numberAsWEIHex);\n  return numberAsGWEI;\n}\n\nexport async function fetchEip1159GasEstimates(url: string): Promise<EIP1159GasData> {\n  const estimates = await get<EIP1159GasData>(url);\n  const normalizedEstimates = {\n    ...estimates,\n    estimatedBaseFee: normalizeGWEIDecimalNumbers(estimates.estimatedBaseFee),\n    low: {\n      ...estimates.low,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxFeePerGas),\n    },\n    medium: {\n      ...estimates.medium,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxFeePerGas),\n    },\n    high: {\n      ...estimates.high,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxFeePerGas),\n    },\n  };\n  return normalizedEstimates;\n}\n\n/**\n * Hit the legacy MetaSwaps gasPrices estimate api and return the low, medium\n * high values from that API.\n */\nexport async function fetchLegacyGasPriceEstimates(url: string): Promise<LegacyGasData> {\n  const result = await get<{\n    SafeGasPrice: string;\n    ProposeGasPrice: string;\n    FastGasPrice: string;\n  }>(url, {\n    referrer: url,\n    referrerPolicy: \"no-referrer-when-downgrade\",\n    method: \"GET\",\n    mode: \"cors\",\n  });\n  return {\n    low: result.SafeGasPrice,\n    medium: result.ProposeGasPrice,\n    high: result.FastGasPrice,\n  };\n}\n\nexport const validateTypedMessageParams = (parameters: TypedMessageParams<unknown>, activeChainId: number) => {\n  try {\n    assert.ok(parameters && typeof parameters === \"object\", \"Params must be an object.\");\n    assert.ok(\"data\" in parameters, 'Params must include a \"data\" field.');\n    assert.ok(\"from\" in parameters, 'Params must include a \"from\" field.');\n    assert.ok(\n      typeof parameters.from === \"string\" && isValidAddress(parameters.from),\n      '\"from\" field must be a valid, lowercase, hexadecimal Ethereum address string.'\n    );\n    let data = null;\n    let chainId = null;\n    switch ((parameters as TypedMessageParams<unknown>).version) {\n      case SignTypedDataVersion.V1:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n        assert.ok(Array.isArray(data as unknown), \"params.data must be an array.\");\n        assert.doesNotThrow(() => {\n          typedSignatureHash(data as TypedDataV1Field[]);\n        }, \"Signing data must be valid EIP-712 typed data.\");\n        break;\n      case SignTypedDataVersion.V3:\n      case SignTypedDataVersion.V4:\n        if (typeof parameters.data === \"string\") {\n          assert.doesNotThrow(() => {\n            data = JSON.parse(parameters.data as string);\n          }, '\"data\" must be a valid JSON string.');\n        } else {\n          // for backward compatiblity we validate for both string and object type.\n          data = parameters.data;\n        }\n\n        assert.ok(data.primaryType in data.types, `Primary type of \"${data.primaryType}\" has no type definition.`);\n        const validation = jsonschema.validate(data, TYPED_MESSAGE_SCHEMA.properties);\n        assert.strictEqual(validation.errors.length, 0, \"Signing data must conform to EIP-712 schema. See https://git.io/fNtcx.\");\n        chainId = data.domain?.chainId;\n        if (chainId) {\n          assert.ok(!Number.isNaN(activeChainId), `Cannot sign messages for chainId \"${chainId}\", because Web3Auth is switching networks.`);\n          if (typeof chainId === \"string\") {\n            chainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n          }\n          assert.strictEqual(chainId, activeChainId, `Provided chainId \"${chainId}\" must match the active chainId \"${activeChainId}\"`);\n        }\n        break;\n      default:\n        assert.fail(`Unknown typed data version \"${(parameters as TypedMessageParams<unknown>).version}\"`);\n    }\n  } catch (error) {\n    throw ethErrors.rpc.invalidInput({\n      message: error?.message,\n    });\n  }\n};\n","import { TransactionFactory } from \"@ethereumjs/tx\";\nimport {\n  decrypt,\n  EthEncryptedData,\n  getEncryptionPublicKey,\n  MessageTypes,\n  personalSign,\n  signTypedData,\n  SignTypedDataVersion,\n  TypedDataV1,\n  TypedMessage,\n} from \"@metamask/eth-sig-util\";\nimport { SafeEventEmitterProvider, signMessage } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { isHexStrict, log } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { privateToAddress, stripHexPrefix } from \"ethereumjs-util\";\n\nimport { IProviderHandlers, MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/interfaces\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\nimport { validateTypedMessageParams } from \"./TransactionFormatter/utils\";\n\nasync function signTx(txParams: TransactionParams & { gas?: string }, privKey: string, txFormatter: TransactionFormatter): Promise<Buffer> {\n  const finalTxParams = await txFormatter.formatTransaction(txParams);\n  const common = await txFormatter.getCommonConfiguration();\n  const unsignedEthTx = TransactionFactory.fromTxData(finalTxParams, {\n    common,\n  });\n  const signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n  return signedTx;\n}\n\nexport function getProviderHandlers({\n  txFormatter,\n  privKey,\n  getProviderEngineProxy,\n}: {\n  txFormatter: TransactionFormatter;\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): IProviderHandlers {\n  return {\n    getAccounts: async (_: JRPCRequest<unknown>) => [`0x${privateToAddress(Buffer.from(privKey, \"hex\")).toString(\"hex\")}`],\n    getPrivateKey: async (_: JRPCRequest<unknown>) => privKey,\n    processTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      const txHash = await providerEngineProxy.request<string[], string>({\n        method: \"eth_sendRawTransaction\",\n        params: [\"0x\".concat(signedTx.toString(\"hex\"))],\n      });\n      return txHash;\n    },\n    processSignTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      return `0x${signedTx.toString(\"hex\")}`;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const rawMessageSig = signMessage(privKey, msgParams.data);\n      return rawMessageSig;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = personalSign({ privateKey: privKeyBuffer, data: msgParams.data });\n      return sig;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessage\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      const params = {\n        ...msgParams,\n        version: SignTypedDataVersion.V1,\n      };\n      validateTypedMessageParams(params, finalChainId);\n      const data = typeof params.data === \"string\" ? JSON.parse(params.data) : params.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V1 });\n      return sig;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV3\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V3 });\n      return sig;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV4\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const chainId = await providerEngineProxy.request<unknown, string>({ method: \"eth_chainId\" });\n      const finalChainId = Number.parseInt(chainId, isHexStrict(chainId) ? 16 : 10);\n      validateTypedMessageParams(msgParams, finalChainId);\n      const data = typeof msgParams.data === \"string\" ? JSON.parse(msgParams.data) : msgParams.data;\n      const sig = signTypedData({ privateKey: privKeyBuffer, data, version: SignTypedDataVersion.V4 });\n      return sig;\n    },\n    processEncryptionPublicKey: async (address: string, _: JRPCRequest<unknown>): Promise<string> => {\n      log.info(\"processEncryptionPublicKey\", address);\n      return getEncryptionPublicKey(privKey);\n    },\n    processDecryptMessage: (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): string => {\n      log.info(\"processDecryptMessage\", msgParams);\n      const stripped = stripHexPrefix(msgParams.data);\n      const buff = Buffer.from(stripped, \"hex\");\n      const decrypted = decrypt({ encryptedData: JSON.parse(buff.toString(\"utf8\")) as EthEncryptedData, privateKey: privKey });\n      return decrypted;\n    },\n  };\n}\n","import { BigNumber } from \"bignumber.js\";\nimport { addHexPrefix, BN, stripHexPrefix } from \"ethereumjs-util\";\n\nexport function bnLessThan(a, b) {\n  if (a === null || a === undefined || b === null || b === undefined) {\n    return null;\n  }\n  return new BigNumber(a, 10).lt(b, 10);\n}\n\nexport function bnToHex(inputBn: BN) {\n  return addHexPrefix(inputBn.toString(16));\n}\n\nexport function hexToBn(inputHex: string): BN {\n  if (BN.isBN(inputHex)) return inputHex;\n  return new BN(stripHexPrefix(inputHex), 16);\n}\n\nexport function BnMultiplyByFraction(targetBN: BN, numerator: number | string, denominator: number | string): BN {\n  const numberBN = new BN(numerator);\n  const denomBN = new BN(denominator);\n  return targetBN.mul(numberBN).div(denomBN);\n}\n","export const LegacyGasAPIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/gasPrices\";\nexport const EIP1559APIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/suggestedGasFees\";\nexport const TRANSACTION_ENVELOPE_TYPES = {\n  LEGACY: \"0x0\",\n  ACCESS_LIST: \"0x1\",\n  FEE_MARKET: \"0x2\",\n};\n\nexport const TRANSACTION_TYPES = {\n  SENT_ETHER: \"sentEther\",\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  STANDARD_TRANSACTION: \"transaction\",\n};\n\nexport const GAS_ESTIMATE_TYPES = {\n  FEE_MARKET: \"fee-market\",\n  LEGACY: \"legacy\",\n  ETH_GASPRICE: \"eth_gasPrice\",\n  NONE: \"none\",\n};\n","import Common, { Hardfork } from \"@ethereumjs/common\";\nimport { Block } from \"@toruslabs/base-controllers\";\nimport { CustomChainConfig, log, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { addHexPrefix, stripHexPrefix } from \"ethereumjs-util\";\n\nimport { TransactionParams } from \"../../../rpc/interfaces\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { bnLessThan, BnMultiplyByFraction, bnToHex, hexToBn } from \"../../utils\";\nimport { EIP1559APIEndpoint, GAS_ESTIMATE_TYPES, LegacyGasAPIEndpoint, TRANSACTION_ENVELOPE_TYPES, TRANSACTION_TYPES } from \"./constants\";\nimport { EIP1159GasData, FallbackGasData, GasData, LegacyGasData, TxType } from \"./interfaces\";\nimport { fetchEip1159GasEstimates, fetchLegacyGasPriceEstimates } from \"./utils\";\n\nexport class TransactionFormatter {\n  private chainConfig: CustomChainConfig | null = null;\n\n  private getProviderEngineProxy: () => SafeEventEmitterProvider;\n\n  private isEIP1559Compatible = false;\n\n  constructor({ getProviderEngineProxy }: { getProviderEngineProxy: () => SafeEventEmitterProvider }) {\n    this.getProviderEngineProxy = getProviderEngineProxy;\n  }\n\n  get providerProxy() {\n    return this.getProviderEngineProxy();\n  }\n\n  async init(): Promise<void> {\n    this.chainConfig = (await this.providerProxy.request<CustomChainConfig>({ method: \"eth_provider_config\", params: [] })) as CustomChainConfig;\n    this.isEIP1559Compatible = await this.getEIP1559Compatibility();\n  }\n\n  async getCommonConfiguration(): Promise<Common> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const { displayName: name, chainId } = this.chainConfig;\n    const hardfork = this.isEIP1559Compatible ? Hardfork.London : Hardfork.Berlin;\n    const customChainParams = {\n      name,\n      chainId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      networkId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      defaultHardfork: hardfork,\n    };\n    return Common.custom(customChainParams);\n  }\n\n  async formatTransaction(txParams: TransactionParams & { gas?: string }): Promise<TransactionParams & { gas?: string }> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n\n    const clonedTxParams = {\n      ...txParams,\n    };\n\n    if (clonedTxParams.nonce === undefined)\n      clonedTxParams.nonce = (await this.providerProxy.request<number>({\n        method: \"eth_getTransactionCount\",\n        params: [txParams.from, \"latest\"],\n      })) as number;\n\n    if (!this.isEIP1559Compatible && clonedTxParams.gasPrice) {\n      if (clonedTxParams.maxFeePerGas) delete clonedTxParams.maxFeePerGas;\n      if (clonedTxParams.maxPriorityFeePerGas) delete clonedTxParams.maxPriorityFeePerGas;\n      // if gas is not provided explicitly, estimate it.\n      if (!clonedTxParams.gas) {\n        const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n        if (defaultGasLimit) {\n          clonedTxParams.gasLimit = defaultGasLimit;\n        }\n      } else {\n        clonedTxParams.gasLimit = clonedTxParams.gas;\n      }\n      return clonedTxParams;\n    }\n\n    if (!clonedTxParams.gas) {\n      const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n      if (defaultGasLimit) {\n        clonedTxParams.gasLimit = defaultGasLimit;\n      }\n    } else {\n      clonedTxParams.gasLimit = clonedTxParams.gas;\n    }\n\n    const {\n      gasPrice: defaultGasPrice,\n      maxFeePerGas: defaultMaxFeePerGas,\n      maxPriorityFeePerGas: defaultMaxPriorityFeePerGas,\n    } = await this.getDefaultGasFees(clonedTxParams);\n\n    if (this.isEIP1559Compatible) {\n      // If the dapp has suggested a gas price, but no maxFeePerGas or maxPriorityFeePerGas\n      //  then we set maxFeePerGas and maxPriorityFeePerGas to the suggested gasPrice.\n      if (clonedTxParams.gasPrice && !clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n        clonedTxParams.maxFeePerGas = clonedTxParams.gasPrice;\n\n        clonedTxParams.maxPriorityFeePerGas = bnLessThan(\n          typeof defaultMaxPriorityFeePerGas === \"string\" ? stripHexPrefix(defaultMaxPriorityFeePerGas) : defaultMaxPriorityFeePerGas,\n          typeof clonedTxParams.gasPrice === \"string\" ? stripHexPrefix(clonedTxParams.gasPrice) : clonedTxParams.gasPrice\n        )\n          ? defaultMaxPriorityFeePerGas\n          : clonedTxParams.gasPrice;\n      } else {\n        if (defaultMaxFeePerGas && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, then we set maxFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxFeePerGas = defaultMaxFeePerGas;\n        }\n\n        if (defaultMaxPriorityFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, then we set maxPriorityFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxPriorityFeePerGas = defaultMaxPriorityFeePerGas;\n        }\n\n        if (defaultGasPrice && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, and no maxFeePerGas is available\n          // then we set maxFeePerGas to the defaultGasPrice, assuming it is\n          // available.\n          clonedTxParams.maxFeePerGas = defaultGasPrice;\n        }\n\n        if (clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, and no maxPriorityFeePerGas is\n          // available  then we set maxPriorityFeePerGas to\n          // clonedTxParams.maxFeePerGas, which will either be the gasPrice from the controller, the maxFeePerGas\n          // set by the dapp, or the maxFeePerGas from the controller.\n          clonedTxParams.maxPriorityFeePerGas = clonedTxParams.maxFeePerGas;\n        }\n      }\n\n      // We remove the gasPrice param entirely when on an eip1559 compatible network\n\n      delete clonedTxParams.gasPrice;\n    } else {\n      // We ensure that maxFeePerGas and maxPriorityFeePerGas are not in the transaction params\n      // when not on a EIP1559 compatible network\n\n      delete clonedTxParams.maxPriorityFeePerGas;\n      delete clonedTxParams.maxFeePerGas;\n    }\n\n    // If we have gotten to this point, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas are\n    // set on txParams, it means that either we are on a non-EIP1559 network and the dapp didn't suggest\n    // a gas price, or we are on an EIP1559 network, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas\n    // were available from either the dapp or the network.\n    if (defaultGasPrice && !clonedTxParams.gasPrice && !clonedTxParams.maxPriorityFeePerGas && !clonedTxParams.maxFeePerGas) {\n      clonedTxParams.gasPrice = defaultGasPrice as never;\n    }\n\n    clonedTxParams.type = this.isEIP1559Compatible ? TRANSACTION_ENVELOPE_TYPES.FEE_MARKET : TRANSACTION_ENVELOPE_TYPES.LEGACY;\n    clonedTxParams.chainId = this.chainConfig.chainId;\n    return clonedTxParams;\n  }\n\n  private async fetchEthGasPriceEstimate(): Promise<{ gasPrice: string }> {\n    const gasPrice = (await this.providerProxy.request<string>({ method: \"eth_gasPrice\", params: [] })) as string;\n    return {\n      gasPrice: hexWEIToDecGWEI(gasPrice).toString(),\n    };\n  }\n\n  private async getEIP1559Compatibility(): Promise<boolean> {\n    const latestBlock = await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] });\n    const supportsEIP1559 = latestBlock && latestBlock.baseFeePerGas !== undefined;\n\n    return !!supportsEIP1559;\n  }\n\n  private async fetchGasFeeEstimateData(): Promise<GasData> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const isLegacyGasAPICompatible = this.chainConfig.chainId === \"0x1\";\n\n    const chainId = Number.parseInt(this.chainConfig.chainId, 16);\n\n    let gasData: GasData;\n\n    try {\n      if (this.isEIP1559Compatible) {\n        // TODO: kovan is not working due to a bug in metamask api\n        const estimates = await fetchEip1159GasEstimates(EIP1559APIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.FEE_MARKET,\n        };\n      } else if (isLegacyGasAPICompatible) {\n        const estimates = await fetchLegacyGasPriceEstimates(LegacyGasAPIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.LEGACY,\n        };\n      } else {\n        throw new Error(\"Main gas fee/price estimation failed. Use fallback\");\n      }\n    } catch (e: unknown) {\n      try {\n        const estimates = await this.fetchEthGasPriceEstimate();\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.ETH_GASPRICE,\n        };\n      } catch (error: unknown) {\n        throw new Error(`Gas fee/price estimation failed. Message: ${(error as Error).message}`);\n      }\n    }\n    return gasData;\n  }\n\n  private async getDefaultGasFees(\n    txParams: TransactionParams & { gas?: string }\n  ): Promise<{ gasPrice?: string; maxFeePerGas?: string; maxPriorityFeePerGas?: string }> {\n    if ((!this.isEIP1559Compatible && txParams.gasPrice) || (this.isEIP1559Compatible && txParams.maxFeePerGas && txParams.maxPriorityFeePerGas)) {\n      return {};\n    }\n\n    try {\n      const { gasFeeEstimates, gasEstimateType } = await this.fetchGasFeeEstimateData();\n      if (this.isEIP1559Compatible && gasEstimateType === GAS_ESTIMATE_TYPES.FEE_MARKET) {\n        const { medium: { suggestedMaxPriorityFeePerGas, suggestedMaxFeePerGas } = {} } = gasFeeEstimates as EIP1159GasData;\n\n        if (suggestedMaxPriorityFeePerGas && suggestedMaxFeePerGas) {\n          return {\n            maxFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxFeePerGas)),\n            maxPriorityFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxPriorityFeePerGas)),\n          };\n        }\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.LEGACY) {\n        // The LEGACY type includes low, medium and high estimates of\n        // gas price values.\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as LegacyGasData).medium)),\n        };\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.ETH_GASPRICE) {\n        // The ETH_GASPRICE type just includes a single gas price property,\n        // which we can assume was retrieved from eth_gasPrice\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as FallbackGasData).gasPrice)),\n        };\n      }\n    } catch (error) {\n      log.error(error);\n    }\n\n    const { gasPrice } = await this.fetchEthGasPriceEstimate();\n\n    return { gasPrice: addHexPrefix(decGWEIToHexWEI(gasPrice)) };\n  }\n\n  private async estimateTxGas(txMeta: TransactionParams): Promise<string> {\n    const txParams = { ...txMeta };\n\n    // `eth_estimateGas` can fail if the user has insufficient balance for the\n    // value being sent, or for the gas cost. We don't want to check their\n    // balance here, we just want the gas estimate. The gas price is removed\n    // to skip those balance checks. We check balance elsewhere. We also delete\n    // maxFeePerGas and maxPriorityFeePerGas to support EIP-1559 txs.\n    delete txParams.gasPrice;\n    delete txParams.maxFeePerGas;\n    delete txParams.maxPriorityFeePerGas;\n    const gas = (await this.providerProxy.request<string>({ method: \"eth_estimateGas\", params: [txParams] })) as string;\n    return gas;\n  }\n\n  private async analyzeGasUsage(txMeta: TransactionParams): Promise<{\n    blockGasLimit: string;\n    estimatedGasHex: string;\n  }> {\n    const block = (await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] })) as Block;\n    // fallback to block gasLimit\n    const blockGasLimitBN = hexToBn(block.gasLimit as string);\n    const saferGasLimitBN = BnMultiplyByFraction(blockGasLimitBN, 19, 20);\n    let estimatedGasHex = bnToHex(saferGasLimitBN);\n\n    try {\n      estimatedGasHex = await this.estimateTxGas(txMeta);\n    } catch (error: unknown) {\n      log.warn(error);\n    }\n    return { blockGasLimit: block.gasLimit as string, estimatedGasHex };\n  }\n\n  private addGasBuffer(initialGasLimitHex: string, blockGasLimitHex: string, multiplier = 1.5): string {\n    const initialGasLimitBn = hexToBn(initialGasLimitHex);\n    const blockGasLimitBn = hexToBn(blockGasLimitHex);\n    const upperGasLimitBn = blockGasLimitBn.muln(0.9);\n    const bufferedGasLimitBn = initialGasLimitBn.muln(multiplier);\n\n    // if initialGasLimit is above blockGasLimit, dont modify it\n    if (initialGasLimitBn.gt(upperGasLimitBn)) return bnToHex(initialGasLimitBn);\n    // if bufferedGasLimit is below blockGasLimit, use bufferedGasLimit\n    if (bufferedGasLimitBn.lt(upperGasLimitBn)) return bnToHex(bufferedGasLimitBn);\n    // otherwise use blockGasLimit\n    return bnToHex(upperGasLimitBn);\n  }\n\n  private async determineTransactionCategory(txParameters: TransactionParams & { gas?: string }): Promise<{\n    transactionCategory: TxType | null;\n    code?: string;\n  }> {\n    const { data, to } = txParameters;\n    let code = \"\";\n\n    let txCategory: TxType | null;\n\n    if (data && !to) {\n      txCategory = TRANSACTION_TYPES.DEPLOY_CONTRACT;\n    } else {\n      try {\n        code = (await this.providerProxy.request<string>({ method: \"eth_getCode\", params: [to, \"latest\"] })) as string;\n      } catch (error) {\n        log.warn(error);\n      }\n      const codeIsEmpty = !code || code === \"0x\" || code === \"0x0\";\n\n      txCategory = codeIsEmpty ? TRANSACTION_TYPES.SENT_ETHER : TRANSACTION_TYPES.CONTRACT_INTERACTION;\n    }\n\n    return { transactionCategory: txCategory, code };\n  }\n\n  private async getDefaultGasLimit(txParams: TransactionParams & { gas?: string }): Promise<string> {\n    const { transactionCategory } = await this.determineTransactionCategory({ ...txParams });\n\n    if (txParams.gas) {\n      return txParams.gas;\n    }\n\n    if (txParams.to && transactionCategory === TRANSACTION_TYPES.SENT_ETHER) {\n      // if there's data in the params, but there's no contract code, it's not a valid transaction\n      if (txParams.data) {\n        throw Error(\"TxGasUtil - Trying to call a function on a non-contract address\");\n      }\n\n      const TWENTY_ONE_THOUSAND = 21_000;\n\n      // This is a standard ether simple send, gas requirement is exactly 21k\n      return addHexPrefix(TWENTY_ONE_THOUSAND.toString(16));\n    }\n\n    const { blockGasLimit, estimatedGasHex } = await this.analyzeGasUsage(txParams);\n\n    // add additional gas buffer to our estimation for safety\n    const gasLimit = this.addGasBuffer(addHexPrefix(estimatedGasHex), blockGasLimit as string);\n    return gasLimit;\n  }\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createAccountMiddleware, createChainSwitchMiddleware, createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { AddEthereumChainParameter, IAccountHandlers, IChainSwitchHandlers } from \"../../rpc/interfaces\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./ethPrivatekeyUtils\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\n\nexport interface EthereumPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface EthereumPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class EthereumPrivateKeyProvider extends BaseProvider<BaseProviderConfig, EthereumPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: EthereumPrivKeyProviderConfig; state?: EthereumPrivKeyProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<EthereumPrivateKeyProvider> => {\n    const providerFactory = new EthereumPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const txFormatter = new TransactionFormatter({\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const providerHandlers = getProviderHandlers({\n      txFormatter,\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const chainSwitchMiddleware = this.getChainSwitchMiddleware();\n    const engine = new JRPCEngine();\n    // Not a partial anymore because of checks in ctor\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(chainSwitchMiddleware);\n    engine.push(this.getAccountMiddleware());\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await txFormatter.init();\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    if (!chainId) throw ethErrors.rpc.invalidParams(\"chainId is required while lookupNetwork\");\n    const network = await this._providerEngineProxy.request<string[], string>({\n      method: \"net_version\",\n      params: [],\n    });\n\n    if (parseInt(chainId, 16) !== parseInt(network, 10)) throw ethErrors.provider.chainDisconnected(`Invalid network, net_version is: ${network}`);\n    if (this.state.chainId !== chainId) {\n      this._providerEngineProxy.emit(\"chainChanged\", chainId);\n      this._providerEngineProxy.emit(\"connect\", { chainId });\n    }\n    this.update({ chainId });\n    return network;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addChain: async (params: AddEthereumChainParameter): Promise<void> => {\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = params;\n        this.addChain({\n          chainNamespace: \"eip155\",\n          chainId,\n          ticker: nativeCurrency?.symbol || \"ETH\",\n          tickerName: nativeCurrency?.name || \"Ether\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n        });\n      },\n      switchChain: async (params: { chainId: string }): Promise<void> => {\n        const { chainId } = params;\n        await this.switchChain({ chainId });\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (params: { privateKey: string }): Promise<void> => {\n        const { privateKey } = params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n"],"names":["_getInitializedChains","customChains","names","chains","mainnet","ropsten","rinkeby","kovan","goerli","sepolia","chain","name_1","name","chainId","toString","exports","require","CustomChain","Hardfork","Chain","ConsensusType","ConsensusAlgorithm","opts","_super","_this","_customChains","_chainParams","setChain","DEFAULT_HARDFORK","defaultHardfork","Istanbul","hardforks","hf","forkHash","_calcForkHash","_hardfork","supportedHardforks","_supportedHardforks","hardfork","setHardfork","eips","setEIPs","__extends","Common","chainParamsOrName","baseChain","standardChainParams","_getChainParams","PolygonMainnet","custom","networkId","PolygonMumbai","ArbitrumRinkebyTestnet","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","Error","customChainParams","initializedChains","Boolean","ethereumjs_util_1","isBN","plainCustomChains","this","length","Array","isArray","map","e","param","undefined","_isSupportedHardfork","existing","emit","blockNumber","td","toType","BN","minTdHF","maxTdHF","previousHF","Chainstart","block","gte","msgAdd","hardforkGteHardfork","msg","getHardforkByBlockNumber","onlySupported","hfs","chainName","eip","eips_1","minHF","this_1","gteHardfork","requiredEIPs","forEach","elem","includes","isActivatedEIP","_eips","topic","value","paramByEIP","paramByHardfork","_chooseHardfork","hfChanges","hfEIPs","valueEIP","v","eipParams","activeHfs","activeHardforks","hfBlock","hardforkBlockBN","hardforkIsActiveOnBlock","hardfork1","hardfork2","onlyActive","posHf1","posHf2","index","push","Number","_getHardfork","eq","nextHardforkBlockBN","reduce","acc","gt","nextHardforkBlock","genesis","Buffer","from","hash","substr","hfBuffer","alloc","prevBlock","hfBlockBuffer","padStart","concat","inputBuffer","forkhash","intToBuffer","data","resArray","filter","chainArrayWithGenesis","chainIdBN","networkIdBN","consensusAlgorithm","copy","Object","assign","create","getPrototypeOf","removeAllListeners","events_1","txData","cache","dataFee","activeCapabilities","DEFAULT_CHAIN","common_1","Mainnet","nonce","gasLimit","to","r","s","type","_type","toBuffer","toNumber","txOptions","toB","vB","rB","sB","_validateCannotExceedMaxInteger","BaseTransaction","capability","stringError","errors","getBaseFee","isSigned","verifySignature","fee","getDataFee","addn","common","toCreationAddress","iaddn","txDataZero","txDataNonZero","cost","i","dataLength","Math","ceil","initCodeCost","imuln","iadd","buf","publicKey","getSenderPublicKey","unpadBuffer","publicToAddress","privateKey","_errorMsg","hackApplied","supports","types_1","EIP155ReplayProtection","msgHash","getMessageToSign","ecsign","tx","_processSignature","indexOf","splice","isSupportedChainId","forCustomChain","values","bits","cannotEqual","entries","key","bufferToHex","postfix","TRANSACTION_TYPE_BUFFER","accessList","maxFeePerGas","maxPriorityFeePerGas","_getCommon","accessListData","util_1","getAccessListData","AccessListJSON","verifyAccessList","mul","lt","eqn","checkMaxInitCodeSize","freeze","FeeMarketEIP1559Transaction","serialized","slice","equals","decode","fromValuesArray","fromSerializedTx","validateNoLeadingZeroes","getDataFeeEIP2930","isFrozen","baseFee","gasPrice","min","sub","add","bnToUnpaddedBuffer","base","raw","encode","hashMessage","message","keccak256","serialize","getMessageToVerifySignature","ecrecover","fromTxData","accessListJSON","getAccessListJSON","bnToHex","errorStr","_getSharedErrorPostfix","baseTransaction_1","AccessListEIP2930Transaction","yParity","enumerable","get","default","__exportStar","_validateTxV","chainIdDoubled","muln","Transaction","_getMessageToSign","rlphash","vBN","ltn","numSub","subn","isEven","divn","onEIP155BlockOrLater","TransactionFactory","txType","_1","EIP","isBuffer","fromSerializedData","transactionID","_common","isAccessListBuffer","input","firstItem","Capability","AccessLists","bufferAccessList","isAccessList","newAccessList","item","addressBuffer","address","storageItems","storageKeys","json","jsonItem","accessListItem","storageSlots","storageSlot","JSONItem","setLengthLeft","slot","accessListStorageKeyCost","accessListAddressCost","slots","encrypt","version","utils_1","pubKeyUInt8Array","ephemeralKeyPair","nacl","box","keyPair","naclUtil","decodeBase64","err","msgParamsUInt8Array","decodeUTF8","randomBytes","nonceLength","encryptedMessage","secretKey","encodeBase64","ephemPublicKey","ciphertext","decrypt","encryptedData","output","recieverPrivateKeyUint8Array","nacl_decodeHex","recieverEncryptionPrivateKey","fromSecretKey","decryptedMessage","open","encodeUTF8","msgHex","msgBase64","DEFAULT_PADDING_LENGTH","dataWithPadding","padding","modVal","byteLength","JSON","stringify","padLength","repeat","parse","privateKeyUint8Array","encryptionPublicKey","concatSig","normalize","getPublicKeyFor","signature","messageHash","sig","sender","SignTypedDataVersion","validateVersion","allowedVersions","keys","join","encodeField","types","V3","V4","encodeData","lastIndexOf","parsedType","typeValuePairs","ethereumjs_abi_1","primaryType","encodedTypes","encodedValues","hashType","field","encodeType","result","unsortedDeps","findTypeDependencies","delete","deps","sort","t","results","Set","match","has","hashStruct","sanitizeData","sanitizedData","properties","EIP712Domain","_typedSignatureHash","typedData","error","schema","fill","additionalProperties","items","required","domain","eip712Hash","parts","hashBuffer","V1","padWithZeroes","hexString","targetLength","test","String","prototype","call","ethjs_util_1","rSig","sSig","vSig","rStr","sStr","vStr","sigParams","buffer","toLowerCase","assert","ethjsUtil","secp256k1","addr","bytes_1","eip1191ChainId","stripHexPrefix","prefix","hash_1","ret","parseInt","toUpperCase","nonceBN","isZero","toArray","salt","initCode","fromBuf","saltBuf","initCodeBuf","a","privateKeyVerify","sanitize","publicKeyVerify","pubKey","publicKeyConvert","publicKeyCreate","bytes","allocUnsafe","right","first","isHexString","padToEven","toArrayLike","num","fromTwos","toTwos","str","isHexPrefixed","ba","array","keccak224","keccak384","k256","keccak512","createHash","update","digest","padded","rlp","self","fields","_fields","toJSON","label","obj_1","getter","setter","allowZero","allowLess","defineProperty","configurable","set","alias","d","keys_1","secp256k1v3","der","Uint8Array","compressed","RangeError","privateKeyExport","privateKeyImport","privateKeyNegate","privateKeyModInverse","tweak","privateKeyTweakAdd","privateKeyTweakMul","publicKeyTweakAdd","publicKeyTweakMul","publicKeys","publicKeyCombine","signatureNormalize","signatureExport","signatureImport","sigObj","signatureImportLax","options","TypeError","signOptions","noncefn","algo","attempt","bufferAlgo","bufferData","ecdsaSign","recovery","recid","ecdsaVerify","ecdsaRecover","ecdh","ecdhUnsafe","EC_PRIVKEY_EXPORT_DER_COMPRESSED","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","lenb","len","lenbyte","rlen","rindex","slen","sindex","rvalue","svalue","ec","EC","ecparams","curve","ucmp","n","point","g","toPublicKey","getX","getY","bn","invm","keyFromPublic","scalar","shared","pub","x","y","isOdd","calculateSigRecovery","isValidSigRecovery","sign","senderPubKey","recover","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","cmp","isNumeric","mathceil","mathfloor","floor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","bitFloor","coeffToString","z","j","charCodeAt","compare","b","xc","c","yc","k","l","intCheck","max","toExponential","charAt","toFixedPoint","zs","BigNumber","clone","configObject","div","convertBase","parseNumeric","P","constructor","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","alphabetHasNormalDecimalDigits","alphabet","caseChanged","isNum","_isBigNumber","replace","search","substring","round","DEBUG","format","rm","id","c0","ne","maxOrMin","args","method","m","normalise","pop","sd","ni","rd","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","obj","p","hasOwnProperty","crypto","getRandomValues","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","arguments","minimum","random","pow2_53","random53bitInt","dp","rand","Uint32Array","sum","plus","decimal","toBaseOut","baseIn","baseOut","arrL","arr","reverse","callerIsToString","pow","multiply","temp","xlo","xhi","carry","klo","khi","aL","bL","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","isNaN","p1","p2","absoluteValue","abs","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","mod","times","integerValue","isEqualTo","isFinite","isGreaterThan","isGreaterThanOrEqualTo","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","minus","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFixed","toFormat","split","g1","g2","intPart","fractionPart","isNeg","intDigits","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toPrecision","Symbol","toStringTag","for","resemblesAddress","createWalletMiddleware","_ref","getAccounts","getPrivateKey","processDecryptMessage","processEncryptionPublicKey","processEthSignMessage","processPersonalMessage","processTransaction","processSignTransaction","processTypedMessage","processTypedMessageV3","processTypedMessageV4","validateAndNormalizeKeyholder","_validateAndNormalizeKeyholder","req","_context","accounts","normalizedAccounts","_address","normalizedAddress","ethErrors","_lookupAccounts","res","_context2","_lookupDefaultAccount","_context3","_sendTransaction","_context4","txParams","params","_signTransaction","_context5","_ethSign","_context6","extraParams","msgParams","_signTypedData","_context7","_signTypedDataV","_context8","_signTypedDataV2","_context9","_personalSign","_context10","firstParam","secondParam","warning","_encryptionPublicKey","_context11","_decryptMessage","_context12","_fetchPrivateKey","_context13","createScaffoldMiddleware","eth_accounts","createAsyncMiddleware","eth_private_key","eth_coinbase","eth_sendTransaction","eth_signTransaction","eth_sign","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","eth_getEncryptionPublicKey","eth_decrypt","createEthMiddleware","providerHandlers","mergeMiddleware","eth_syncing","createChainIdMiddleware","next","end","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","connector","_getPrivateKey","_","_processTransaction","sendTransaction","_processSignTransaction","signTransaction","_processEthSignMessage","signMessage","_processPersonalMessage","signPersonalMessage","_processTypedMessage","signTypedData","WalletConnectProvider","_inherits","state","_classCallCheck","chainConfig","chainNamespace","CHAIN_NAMESPACES","skipLookupNetwork","_defineProperty","_createClass","_enable","code","setupProvider","_providerEngineProxy","request","onConnectorStateUpdate","setupEngine","_switchChain","addChain","_ref2$addChain","lookup","currentChainConfig","getChainConfig","displayName","sendCustomRequest","rpcUrls","log","configure","lookupNetwork","WalletInitializationError","_get","connected","WalletLoginError","provider","connectedHexChainId","isHexStrict","getProviderHandlers","ethMiddleware","engine","JRPCEngine","_createJsonRpcClient","providerFromEngine","updateProviderEngineProxy","on","_ref3","payload","_this2","_payload$params$","connectedChainId","rpcUrl","maybeConfig","BaseProvider","providerFactory","BIG_NUMBER_WEI_MULTIPLIER","BIG_NUMBER_GWEI_MULTIPLIER","BIG_NUMBER_ETH_MULTIPLIER","toBigNumber","hex","dec","toNormalizedDenomination","WEI","bigNumber","GWEI","ETH","toSpecifiedDenomination","baseChange","conversionUtil","fromNumericBase","fromDenomination","toNumericBase","toDenomination","numberOfDecimals","convertedValue","converter","decGWEIToHexWEI","decGWEI","hexWEIToDecGWEI","normalizeGWEIDecimalNumbers","fetchEip1159GasEstimates","_fetchEip1159GasEstimates","url","estimates","normalizedEstimates","estimatedBaseFee","low","suggestedMaxPriorityFeePerGas","suggestedMaxFeePerGas","medium","high","fetchLegacyGasPriceEstimates","_fetchLegacyGasPriceEstimates","referrer","referrerPolicy","mode","SafeGasPrice","ProposeGasPrice","FastGasPrice","validateTypedMessageParams","parameters","activeChainId","_typeof","isValidAddress","typedSignatureHash","validation","jsonschema","TYPED_MESSAGE_SCHEMA","_data$domain","signTx","_signTx","privKey","txFormatter","formatTransaction","finalTxParams","getCommonConfiguration","unsignedEthTx","signedTx","getProviderEngineProxy","privateToAddress","providerEngineProxy","txHash","rawMessageSig","privKeyBuffer","personalSign","finalChainId","_processTypedMessageV","_processTypedMessageV2","_processEncryptionPublicKey","getEncryptionPublicKey","stripped","buff","inputBn","addHexPrefix","hexToBn","inputHex","BnMultiplyByFraction","targetBN","numerator","denominator","numberBN","denomBN","TRANSACTION_ENVELOPE_TYPES","TRANSACTION_TYPES","GAS_ESTIMATE_TYPES","TransactionFormatter","_init","providerProxy","getEIP1559Compatibility","isEIP1559Compatible","_getCommonConfiguration","_this$chainConfig","clonedTxParams","gas","getDefaultGasLimit","defaultGasLimit","getDefaultGasFees","_yield$this$getDefaul","defaultGasPrice","defaultMaxFeePerGas","defaultMaxPriorityFeePerGas","_fetchEthGasPriceEstimate","_getEIP1559Compatibility","latestBlock","supportsEIP1559","baseFeePerGas","_fetchGasFeeEstimateData","isLegacyGasAPICompatible","gasData","gasFeeEstimates","gasEstimateType","fetchEthGasPriceEstimate","fetchGasFeeEstimateData","_yield$this$fetchGasF","_gasFeeEstimates$medi","_yield$this$fetchEthG","txMeta","blockGasLimitBN","saferGasLimitBN","estimatedGasHex","estimateTxGas","blockGasLimit","initialGasLimitHex","blockGasLimitHex","multiplier","initialGasLimitBn","blockGasLimitBn","upperGasLimitBn","bufferedGasLimitBn","txParameters","txCategory","transactionCategory","determineTransactionCategory","_yield$this$determine","analyzeGasUsage","_yield$this$analyzeGa","addGasBuffer","EthereumPrivateKeyProvider","bind","chainSwitchMiddleware","getChainSwitchMiddleware","getAccountMiddleware","init","_lookupNetwork","network","chainSwitchHandlers","blockExplorerUrls","nativeCurrency","ticker","symbol","tickerName","blockExplorer","switchChain","_addNewChain","chainParams","_updateChain","wallet_addEthereumChain","wallet_switchEthereumChain","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","updateAccount","_ref2","_updateAccount","accountParams","wallet_updateAccount","createAccountMiddleware","factory","CRC32","T0","table","Int32Array","signed_crc_table","TT","T","subarray","slice_by_16_tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","seed","C","L","B","DO_NOT_EXPORT_CRC","root","f","module","util","validateBase64","unescape","encodeURIComponent","fromCharCode","decodeURIComponent","escape","atob","btoa","gf","Float64Array","randombytes","_0","_9","gf0","gf1","_121665","D","D2","X","Y","I","ts64","h","vn","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","inp","o","u","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t0","t1","t2","t3","t4","t5","t6","t7","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","sel25519","pack25519","neq25519","par25519","unpack25519","A","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","x32","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","mask","want","crypto_box_afternm","crypto_box_open_afternm","K","crypto_hashblocks_hl","hh","hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","wh","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","pos","crypto_hash","cswap","pack","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","modL","crypto_sign","sm","smlen","crypto_sign_open","chk","den","den2","den4","den6","unpackneg","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","secretbox","keyLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","tmp","mlen","detached","verify","fromSeed","seedLength","signatureLength","hashLength","setPRNG","fn","msCrypto"],"sourceRoot":""}