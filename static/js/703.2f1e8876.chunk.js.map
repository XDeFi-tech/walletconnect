{"version":3,"file":"static/js/703.2f1e8876.chunk.js","mappings":"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","sources":["../../src/Layout.ts","../node_modules/@solana/buffer-layout/node_modules/buffer/index.js","../node_modules/@noble/hashes/esm/_assert.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/cryptoBrowser.js","../node_modules/@noble/hashes/esm/_sha2.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@noble/ed25519/lib/esm/index.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/superstruct/src/utils.ts","../node_modules/superstruct/src/error.ts","../node_modules/superstruct/src/struct.ts","../node_modules/superstruct/src/structs/utilities.ts","../node_modules/superstruct/src/structs/types.ts","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/superstruct/src/structs/coercions.ts","../node_modules/@noble/hashes/esm/sha3.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@noble/secp256k1/lib/esm/index.js","../node_modules/@solana/web3.js/src/utils/ed25519.ts","../node_modules/@solana/web3.js/src/utils/to-buffer.ts","../node_modules/@solana/web3.js/src/utils/borsh-schema.ts","../node_modules/@solana/web3.js/src/publickey.ts","../node_modules/@solana/web3.js/src/bpf-loader-deprecated.ts","../node_modules/@solana/web3.js/src/account.ts","../node_modules/@solana/web3.js/src/transaction/constants.ts","../node_modules/@solana/web3.js/src/transaction/expiry-custom-errors.ts","../node_modules/@solana/web3.js/src/message/account-keys.ts","../node_modules/@solana/web3.js/src/layout.ts","../node_modules/@solana/web3.js/src/utils/shortvec-encoding.ts","../node_modules/@solana/web3.js/src/utils/assert.ts","../node_modules/@solana/web3.js/src/transaction/legacy.ts","../node_modules/@solana/web3.js/src/message/compiled-keys.ts","../node_modules/@solana/web3.js/src/message/legacy.ts","../node_modules/@solana/web3.js/src/message/v0.ts","../node_modules/@solana/web3.js/src/sysvar.ts","../node_modules/@solana/web3.js/src/utils/send-and-confirm-transaction.ts","../node_modules/@solana/web3.js/src/utils/sleep.ts","../node_modules/@solana/web3.js/src/instruction.ts","../node_modules/@solana/web3.js/src/fee-calculator.ts","../node_modules/@solana/web3.js/src/utils/bigint.ts","../node_modules/@solana/web3.js/src/nonce-account.ts","../node_modules/@solana/web3.js/src/programs/system.ts","../node_modules/@solana/web3.js/src/loader.ts","../node_modules/@solana/web3.js/src/bpf-loader.ts","../node_modules/@solana/web3.js/node_modules/fast-stable-stringify/index.js","../node_modules/@solana/web3.js/src/epoch-schedule.ts","../node_modules/@solana/web3.js/src/errors.ts","../node_modules/@solana/web3.js/src/__forks__/browser/fetch-impl.ts","../node_modules/@solana/web3.js/src/programs/address-lookup-table/state.ts","../node_modules/@solana/web3.js/src/account-data.ts","../node_modules/@solana/web3.js/src/utils/makeWebsocketUrl.ts","../node_modules/@solana/web3.js/src/connection.ts","../node_modules/@solana/web3.js/src/keypair.ts","../node_modules/@solana/web3.js/src/programs/address-lookup-table/index.ts","../node_modules/@solana/web3.js/src/programs/compute-budget.ts","../node_modules/@solana/web3.js/src/programs/ed25519.ts","../node_modules/@solana/web3.js/src/utils/secp256k1.ts","../node_modules/@solana/web3.js/src/programs/secp256k1.ts","../node_modules/@solana/web3.js/src/programs/stake.ts","../node_modules/@solana/web3.js/src/programs/vote.ts","../node_modules/@solana/web3.js/src/validator-info.ts","../node_modules/@solana/web3.js/src/vote-account.ts","../node_modules/@solana/web3.js/node_modules/bn.js/lib/bn.js","../node_modules/@solana/web3.js/node_modules/buffer/index.js","../node_modules/@web3auth/solana-provider/src/rpc/JrpcClient.ts","../node_modules/@web3auth/solana-provider/src/rpc/solanaRpcMiddlewares.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/baseInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/injectedProviderProxy.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/slopeInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/solflareInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/sollet/solletInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/sollet/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/torusInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../node_modules/@web3auth/solana-provider/src/solanaWallet.ts","../node_modules/base-x/src/index.js","../node_modules/bigint-buffer/dist/browser.js","../node_modules/borsh/lib/index.js","../node_modules/borsh/node_modules/bn.js/lib/bn.js","../node_modules/bs58/index.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/rpc-websockets/dist/index.browser.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/rpc-websockets/node_modules/eventemitter3/index.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs"],"sourcesContent":[null,"/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst CU_O = BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949'),\n    l: CU_O,\n    n: CU_O,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexport { CURVE };\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(_2n * mod(Z1 * Z1));\n        const D = mod(a * A);\n        const x1y1 = X1 + Y1;\n        const E = mod(mod(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.ZERO;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        return this.multiplyUnsafe(CURVE.l).equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= POW_2_256)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & MAX_255B);\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, POW_2_256))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexport const sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        const dacb = DA + CB;\n        const da_cb = DA - CB;\n        x_3 = mod(dacb * dacb);\n        z_3 = mod(x_1 * mod(da_cb * da_cb));\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\n","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst ENDO = {\n    a1: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    b1: -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3'),\n    a2: BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'),\n    b2: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    POW_2_128: BigInt('0x100000000000000000000000000000000'),\n};\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const { a1, b1, a2, b2, POW_2_128 } = ENDO;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import {sha512} from '@noble/hashes/sha512';\nimport * as ed25519 from '@noble/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\ned25519.utils.sha512Sync = (...m) => sha512(ed25519.utils.concatBytes(...m));\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.sync.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.Point.fromHex(publicKey, true /* strict */);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sync.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sync.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.sync.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using acounter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","import {Buffer} from 'buffer';\n\nimport {generatePrivateKey, getPublicKey} from './utils/ed25519';\nimport {toBuffer} from './utils/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  private _publicKey: Buffer;\n  /** @internal */\n  private _secretKey: Buffer;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Buffer | Uint8Array | Array<number>) {\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey(): Buffer {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?: TransactionBlockhashCtor | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBuffer())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status =\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n      ? (\n          await connection.confirmTransaction(\n            {\n              signature: signature,\n              blockhash: transaction.recentBlockhash,\n              lastValidBlockHeight: transaction.lastValidBlockHeight,\n            },\n            options && options.commitment,\n          )\n        ).value\n      : (\n          await connection.confirmTransaction(\n            signature,\n            options && options.commitment,\n          )\n        ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy = {\n  signature: TransactionSignature;\n} & BlockhashWithExpiryBlockHeight;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(url.startsWith('https:') /* useHttps */);\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n        source: optional(\n          union([literal('transaction'), literal('lookupTable')]),\n        ),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: BlockheightBasedTransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config =\n        strategy as BlockheightBasedTransactionConfirmationStrategy;\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const subscriptionCommitment = commitment || this.commitment;\n    let timeoutId;\n    let subscriptionId;\n    let done = false;\n\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          rawSignature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            done = true;\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    const expiryPromise = new Promise<\n      | {__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED}\n      | {__type: TransactionStatus.TIMED_OUT; timeoutMs: number}\n    >(resolve => {\n      if (typeof strategy === 'string') {\n        let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n        switch (subscriptionCommitment) {\n          case 'processed':\n          case 'recent':\n          case 'single':\n          case 'confirmed':\n          case 'singleGossip': {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n          // exhaust enums to ensure full coverage\n          case 'finalized':\n          case 'max':\n          case 'root':\n        }\n\n        timeoutId = setTimeout(\n          () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n          timeoutMs,\n        );\n      } else {\n        let config =\n          strategy as BlockheightBasedTransactionConfirmationStrategy;\n        const checkBlockHeight = async () => {\n          try {\n            const blockHeight = await this.getBlockHeight(commitment);\n            return blockHeight;\n          } catch (_e) {\n            return -1;\n          }\n        };\n        (async () => {\n          let currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n          while (currentBlockHeight <= config.lastValidBlockHeight) {\n            await sleep(1000);\n            if (done) return;\n            currentBlockHeight = await checkBlockHeight();\n            if (done) return;\n          }\n          resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n        })();\n      }\n    });\n\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      switch (outcome.__type) {\n        case TransactionStatus.BLOCKHEIGHT_EXCEEDED:\n          throw new TransactionExpiredBlockheightExceededError(rawSignature);\n        case TransactionStatus.PROCESSED:\n          result = outcome.response;\n          break;\n        case TransactionStatus.TIMED_OUT:\n          throw new TransactionExpiredTimeoutError(\n            rawSignature,\n            outcome.timeoutMs / 1000,\n          );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta, version}) => ({\n        meta,\n        transaction: {\n          ...transaction,\n          message: versionedMessageFromResponse(version, transaction.message),\n        },\n        version,\n      })),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedBlockResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetParsedBlockRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    return res.result;\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, options);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._subscriptionsByHash[hash] = {\n        ...subscription,\n        state: 'pending',\n      };\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'subscribing',\n                };\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                };\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'pending',\n                };\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._subscriptionsByHash[hash] = {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  };\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._subscriptionsByHash[hash] = {\n                      ...subscription,\n                      state: 'subscribed',\n                    };\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'unsubscribed',\n                };\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {hmac} from '@noble/hashes/hmac';\nimport {sha256} from '@noble/hashes/sha256';\nimport * as secp256k1 from '@noble/secp256k1';\n\n// Supply a synchronous hashing algorithm to make this\n// library interoperable with the synchronous APIs in web3.js.\nsecp256k1.utils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.signSync>[0],\n  privKey: Parameters<typeof secp256k1.signSync>[1],\n) => secp256k1.signSync(msgHash, privKey, {der: false, recovered: true});\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  return (\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<Omit<CustomChainConfig, \"chainNamespace\">>,\n    next: JRPCEngineNextCallback,\n    end: JRPCEngineEndCallback\n  ) => {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  const { chainId } = providerConfig;\n\n  return mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig)]);\n}\n\nexport function createJsonRpcClient(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import type { Transaction } from \"@solana/web3.js\";\nimport { createAsyncMiddleware, JRPCMiddleware, JRPCRequest, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nexport interface IProviderHandlers {\n  requestAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getPrivateKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<Transaction>;\n  signAllTransactions: (req: JRPCRequest<{ message: Transaction[] }>) => Promise<Transaction[]>;\n  signAndSendTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<{ signature: string }>;\n  getSecretKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signMessage: (req: JRPCRequest<{ message: Uint8Array; display?: string }>) => Promise<Uint8Array>;\n}\n\nexport function createGetAccountsMiddleware({ getAccounts }: { getAccounts: IProviderHandlers[\"getAccounts\"] }): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"getAccounts\") return next();\n\n    if (!getAccounts) throw new Error(\"WalletMiddleware - opts.getAccounts not provided\");\n    // This calls from the prefs controller\n    const accounts = await getAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createRequestAccountsMiddleware({\n  requestAccounts,\n}: {\n  requestAccounts: IProviderHandlers[\"requestAccounts\"];\n}): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"requestAccounts\") return next();\n\n    if (!requestAccounts) throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\");\n    // This calls the UI login function\n    const accounts = await requestAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createGenericJRPCMiddleware<T, U>(\n  targetMethod: string,\n  handler: (req: JRPCRequest<T>) => Promise<U>\n): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware<T, unknown>(async (request, response, next) => {\n    const { method } = request;\n    if (method !== targetMethod) return next();\n\n    if (!handler) throw new Error(`WalletMiddleware - ${targetMethod} not provided`);\n\n    const result = await handler(request);\n\n    response.result = result;\n    return undefined;\n  });\n}\n\nexport function createSolanaMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const { getAccounts, requestAccounts, signTransaction, signAndSendTransaction, signAllTransactions, signMessage, getPrivateKey, getSecretKey } =\n    providerHandlers;\n\n  return mergeMiddleware([\n    createRequestAccountsMiddleware({ requestAccounts }),\n    createGetAccountsMiddleware({ getAccounts }),\n    createGenericJRPCMiddleware<{ message: Transaction }, Transaction>(\"signTransaction\", signTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction }, { signature: string }>(\"signAndSendTransaction\", signAndSendTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction[] }, Transaction[]>(\"signAllTransactions\", signAllTransactions),\n    createGenericJRPCMiddleware<{ message: Uint8Array }, Uint8Array>(\"signMessage\", signMessage),\n    createGenericJRPCMiddleware<void, string>(\"solanaPrivateKey\", getPrivateKey),\n    createGenericJRPCMiddleware<void, string>(\"solanaSecretKey\", getSecretKey),\n  ]);\n}\nexport interface AddSolanaChainParameter {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: 18;\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n}\n\nexport interface IChainSwitchHandlers {\n  addNewChainConfig: (req: JRPCRequest<AddSolanaChainParameter>) => Promise<void>;\n  switchSolanaChain: (req: JRPCRequest<{ chainId: string }>) => Promise<void>;\n}\nexport function createChainSwitchMiddleware({ addNewChainConfig, switchSolanaChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([\n    createGenericJRPCMiddleware<AddSolanaChainParameter, void>(\"addSolanaChain\", addNewChainConfig),\n    createGenericJRPCMiddleware<{ chainId: string }, void>(\"switchSolanaChain\", switchSolanaChain),\n  ]);\n}\n\nexport interface IAccountHandlers {\n  updatePrivatekey: (req: JRPCRequest<{ privateKey: string }>) => Promise<void>;\n}\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([createGenericJRPCMiddleware<{ privateKey: string }, void>(\"updateAccount\", updatePrivatekey)]);\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { createConfigMiddleware } from \"../../../rpc/JrpcClient\";\nimport { createSolanaMiddleware, IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport abstract class BaseInjectedProvider<P> extends BaseProvider<BaseProviderConfig, BaseProviderState, P> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: P): Promise<void> {\n    const engine = new JRPCEngine();\n\n    const providerHandlers = this.getProviderHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    engine.push(solanaMiddleware);\n\n    const configMiddleware = createConfigMiddleware(this.config.chainConfig as CustomChainConfig);\n    engine.push(configMiddleware);\n\n    const injectedProviderProxy = this.getInjectedProviderProxy(injectedProvider);\n    if (injectedProviderProxy) {\n      engine.push(injectedProviderProxy);\n    }\n\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    const { chainConfig } = this.config;\n    this.update({\n      chainId: chainConfig.chainId,\n    });\n    return chainConfig.chainId || \"\";\n  }\n\n  protected getInjectedProviderProxy(_: P): JRPCMiddleware<unknown, unknown> {\n    return undefined;\n  }\n\n  protected abstract getProviderHandlers(injectedProvider: P): IProviderHandlers;\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getBaseProviderHandlers = (injectedProvider: IBaseWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [];\n    },\n    getAccounts: async () => (injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : []),\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const transaction = await injectedProvider.signTransaction(req.params.message);\n      return transaction;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array; display?: \"utf8\" | \"hex\" }>): Promise<Uint8Array> => {\n      const sigData = await injectedProvider.signMessage(req.params.message, req.params.display);\n      return sigData.signature;\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = await injectedProvider.signAllTransactions(req.params.message);\n      return transaction;\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const txRes = await injectedProvider.signAndSendTransaction(req.params.message);\n      return { signature: txRes.signature };\n    },\n  };\n  return providerHandlers;\n};\n","import { createAsyncMiddleware, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\n\nimport { InjectedProvider } from \"./interface\";\n\nexport function createInjectedProviderProxyMiddleware(provider: InjectedProvider): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (req: JRPCRequest<unknown[]>, res: JRPCResponse<unknown>, _next: JRPCEngineNextCallback) => {\n    const result = await provider.request({\n      ...req,\n    });\n    res.result = result;\n  });\n}\n","import { JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nimport { IPhantomWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\n\nexport class PhantomInjectedProvider extends BaseInjectedProvider<IPhantomWalletProvider> {\n  protected getProviderHandlers(injectedProvider: IPhantomWalletProvider): IProviderHandlers {\n    return getBaseProviderHandlers(injectedProvider);\n  }\n\n  protected getInjectedProviderProxy(injectedProvider: IPhantomWalletProvider): JRPCMiddleware<unknown, unknown> {\n    return createInjectedProviderProxyMiddleware(injectedProvider);\n  }\n}\n","import { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSlopeHandlers } from \"./providerHandlers\";\n\nexport class SlopeInjectedProxyProvider extends BaseInjectedProvider<ISlopeProvider> {\n  protected getProviderHandlers(injectedProvider: ISlopeProvider): IProviderHandlers {\n    return getSlopeHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, PublicKey, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getSlopeHandlers = (injectedProvider: ISlopeProvider, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, signature);\n      return txMessage;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      const response = await injectedProvider.signMessage(req.params.message);\n      return bs58.decode(response.data.signature);\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const provider = getProviderEngineProxy();\n      if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, signature);\n      const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n      const conn = new Connection(chainConfig.rpcTarget);\n      const res = await conn.sendRawTransaction(txMessage.serialize());\n      return { signature: res };\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const allTxns = req.params.message;\n      const { length } = allTxns;\n\n      const unsignedTx = [];\n\n      for (let i = 0; i < length; i++) {\n        unsignedTx.push(bs58.encode(req.params.message[i].serializeMessage()));\n      }\n      const { msg, data } = await injectedProvider.signAllTransactions(unsignedTx);\n\n      if (!data.publicKey || data.signatures?.length !== length) throw new Error(msg);\n\n      const publicKey = new PublicKey(data.publicKey);\n\n      for (let i = 0; i < length; i++) {\n        const signature = bs58.decode(data.signatures[i]);\n        allTxns[i].addSignature(publicKey, signature);\n      }\n\n      return allTxns;\n    },\n  };\n  return providerHandlers;\n};\n","import { SolflareWallet } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSolflareHandlers } from \"./providerHandlers\";\n\nexport class SolflareInjectedProvider extends BaseInjectedProvider<SolflareWallet> {\n  protected getProviderHandlers(injectedProvider: SolflareWallet): IProviderHandlers {\n    return getSolflareHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider, SolflareWallet } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\n\nexport const getSolflareHandlers = (injectedProvider: SolflareWallet, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const solflareProviderHandlers = getBaseProviderHandlers(injectedProvider as IBaseWalletProvider);\n  solflareProviderHandlers.signAndSendTransaction = async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return { signature: res };\n  };\n  return solflareProviderHandlers;\n};\n","import type SolletWallet from \"@project-serum/sol-wallet-adapter\";\n\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSolletHandlers } from \"./providerHandlers\";\n\nexport class SolletInjectedProvider extends BaseInjectedProvider<SolletWallet> {\n  protected getProviderHandlers(injectedProvider: SolletWallet): IProviderHandlers {\n    return getSolletHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import type SolletWallet from \"@project-serum/sol-wallet-adapter\";\nimport { Connection, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\n\nexport const getSolletHandlers = (injectedProvider: SolletWallet, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const providerHandlers = getBaseProviderHandlers(injectedProvider as IBaseWalletProvider);\n  providerHandlers.signMessage = async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n    const { signature } = await injectedProvider.sign(req.params.message, \"utf8\");\n    return signature;\n  };\n  providerHandlers.signAndSendTransaction = async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return { signature: res };\n  };\n  return providerHandlers;\n};\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getTorusHandlers = (injectedProvider: ITorusWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const message = await injectedProvider.signMessage(req.params.message);\n      return message;\n    },\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.signTransaction(txMessage);\n      return response;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.sendTransaction(txMessage);\n      return { signature: response };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transactions = req.params.message;\n      const response = await injectedProvider.signAllTransactions(transactions);\n      return response;\n    },\n  };\n  return providerHandlers;\n};\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, isHexStrict, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { createSolanaMiddleware } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\nimport { getTorusHandlers } from \"./providerHandlers\";\n\nexport class TorusInjectedProvider extends BaseProvider<BaseProviderConfig, BaseProviderState, ITorusWalletProvider> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: ITorusWalletProvider): Promise<void> {\n    this.handleInjectedProviderUpdate(injectedProvider);\n    await this.setupEngine(injectedProvider);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Torus solana provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n\n    const connectedChainId = await this.provider.request<unknown, string>({\n      method: \"solana_chainId\",\n    });\n\n    const connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : `0x${parseInt(connectedChainId, 10).toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.update({ chainId: connectedHexChainId });\n    this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return this.state.chainId;\n  }\n\n  private async setupEngine(injectedProvider: ITorusWalletProvider): Promise<void> {\n    const providerHandlers = getTorusHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n    const engine = new JRPCEngine();\n    engine.push(solanaMiddleware);\n    engine.push(injectedProviderProxy);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  private async handleInjectedProviderUpdate(injectedProvider: ITorusWalletProvider): Promise<void> {\n    injectedProvider.on(\"accountsChanged\", async (accounts: string[]) => {\n      this.provider.emit(\"accountsChanged\", accounts);\n    });\n    injectedProvider.on(\"chainChanged\", async (chainId: string) => {\n      const connectedHexChainId = isHexStrict(chainId) ? chainId : `0x${parseInt(chainId, 10).toString(16)}`;\n      // Check if chainId changed and trigger event\n      this.configure({\n        chainConfig: { ...this.config.chainConfig, chainId: connectedHexChainId },\n      });\n      await this.setupProvider(injectedProvider);\n    });\n  }\n}\n","import { Keypair, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport nacl from \"@toruslabs/tweetnacl-js\";\nimport { SafeEventEmitterProvider, WalletInitializationError } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers } from \"../../rpc/solanaRpcMiddlewares\";\n\nexport async function getProviderHandlers({\n  privKey,\n  getProviderEngineProxy,\n}: {\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): Promise<IProviderHandlers> {\n  const keyPairGenerator = (): Keypair => {\n    return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n  };\n  if (typeof privKey !== \"string\") throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n  const keyPair = keyPairGenerator();\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return [keyPair.publicKey.toBase58()];\n    },\n    getAccounts: async () => [keyPair.publicKey.toBase58()],\n\n    getPrivateKey: async () => privKey,\n    getSecretKey: async () => bs58.encode(keyPair.secretKey),\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = req.params.message;\n      transaction.partialSign(keyPair);\n      return transaction;\n    },\n\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n      return signedMsg;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const _providerEngineProxy = getProviderEngineProxy();\n      if (!_providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n\n      const transaction = req.params.message;\n      transaction.sign(keyPair);\n\n      const sig = await _providerEngineProxy.request<string>({\n        method: \"sendTransaction\",\n        params: [bs58.encode(transaction.serialize())],\n      });\n      return { signature: sig };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txns = req.params?.message;\n      for (const tx of txns || []) {\n        const transaction = tx;\n        transaction.partialSign(keyPair);\n      }\n      return txns;\n    },\n  };\n\n  return providerHandlers;\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware, JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createJsonRpcClient } from \"../../rpc/JrpcClient\";\nimport {\n  AddSolanaChainParameter,\n  createAccountMiddleware,\n  createChainSwitchMiddleware,\n  createSolanaMiddleware,\n  IAccountHandlers,\n  IChainSwitchHandlers,\n} from \"../../rpc/solanaRpcMiddlewares\";\nimport { getProviderHandlers } from \"./solanaPrivateKeyUtils\";\n\nexport interface SolanaPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\nexport interface SolanaPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class SolanaPrivateKeyProvider extends BaseProvider<BaseProviderConfig, SolanaPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: SolanaPrivKeyProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<SolanaPrivateKeyProvider> => {\n    const providerFactory = new SolanaPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const providerHandlers = await getProviderHandlers({ privKey, getProviderEngineProxy: this.getProviderEngineProxy.bind(this) });\n\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(this.getChainSwitchMiddleware());\n    engine.push(this.getAccountMiddleware());\n    engine.push(solanaMiddleware);\n    engine.push(networkMiddleware);\n\n    const provider = providerFromEngine(engine);\n\n    this.updateProviderEngineProxy(provider);\n\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"requestAccounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const health = await this._providerEngineProxy.request<unknown, string>({\n      method: \"getHealth\",\n      params: [],\n    });\n    const { chainConfig } = this.config;\n    if (health !== \"ok\")\n      throw WalletInitializationError.rpcConnectionError(`Failed to lookup network for following rpc target: ${chainConfig.rpcTarget}`);\n    this.update({ chainId: chainConfig.chainId });\n    if (this.state.chainId !== chainConfig.chainId) {\n      this.provider.emit(\"chainChanged\", this.state.chainId);\n      this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    }\n    return this.state.chainId;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addNewChainConfig: async (req: JRPCRequest<AddSolanaChainParameter>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = req.params;\n\n        if (!chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n        if (!rpcUrls || rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n        if (!nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.SOLANA,\n          chainId,\n          ticker: nativeCurrency?.symbol || \"SOL\",\n          tickerName: nativeCurrency?.name || \"Solana\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n        });\n      },\n      switchSolanaChain: async (req: JRPCRequest<{ chainId: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n        await this.switchChain(req.params);\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (req: JRPCRequest<{ privateKey: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n        const { privateKey } = req.params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { RequestArguments, SafeEventEmitterProvider } from \"@web3auth/base\";\n\nimport { ISolanaWallet } from \"./interface\";\n\nexport class SolanaWallet implements ISolanaWallet {\n  public provider: SafeEventEmitterProvider;\n\n  constructor(provider: SafeEventEmitterProvider) {\n    this.provider = provider;\n  }\n\n  public async requestAccounts(): Promise<string[]> {\n    const accounts = await this.provider.request<string[]>({\n      method: \"requestAccounts\",\n      params: {},\n    });\n    return accounts;\n  }\n\n  public async signAndSendTransaction(transaction: Transaction): Promise<{ signature: string }> {\n    const { signature } = await this.provider.request<{ signature: string }>({\n      method: \"signAndSendTransaction\",\n      params: {\n        message: transaction,\n      },\n    });\n    return { signature };\n  }\n\n  public async signTransaction(transaction: Transaction): Promise<Transaction> {\n    const signedTransaction = (await this.provider.request({\n      method: \"signTransaction\",\n      params: {\n        message: transaction,\n      },\n    })) as Transaction;\n    return signedTransaction;\n  }\n\n  public async signAllTransactions(transactions: Transaction[]): Promise<Transaction[]> {\n    const signedTransactions = (await this.provider.request({\n      method: \"signAllTransactions\",\n      params: {\n        message: transactions,\n      },\n    })) as Transaction[];\n    return signedTransactions;\n  }\n\n  public async signMessage(data: Uint8Array): Promise<Uint8Array> {\n    const response = await this.provider.request<Uint8Array>({\n      method: \"signMessage\",\n      params: {\n        message: data,\n      },\n    });\n    return response as Uint8Array;\n  }\n\n  public async request<T>(args: RequestArguments): Promise<T> {\n    const result = await this.provider.request<T>(args);\n    return result as T;\n  }\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n"],"names":["checkUint8Array","b","Uint8Array","TypeError","uint8ArrayToBuffer","buffer_1","from","buffer","byteOffset","length","Layout","span","property","Number","isInteger","offset","RangeError","rv","Object","create","constructor","prototype","assign","values","nameWithProperty","name","lo","ExternalLayout","Error","GreedyCount","elementSpan","rem","Math","floor","src","OffsetLayout","layout","UInt","UIntBE","decode","encode","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","split","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","isCount","idx","getSpan","i","push","elo","reduce","v","Structure","fields","decodePrefixes","Array","isArray","acc","undefined","fd","e","fsp","dest","makeDestinationObject","firstOffset","lastOffset","lastWrote","fv","shift","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","replicate","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","hasOwnProperty","call","tag","dlo","clo","contentOffset","variant","VariantLayout","vb","union","fromArray","fixBitwiseResult","BitStructure","word","msb","value","_packedSetValue","_packedGetValue","bits","bf","BitField","Boolean","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","slice","srcBuffer","write","toString","CString","String","srcb","copy","UTF8","maxSpan","Constant","exports","base64","require","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","buf","setPrototypeOf","arg","encodingOrOffset","allocUnsafe","string","encoding","isEncoding","byteLength","actual","fromString","ArrayBuffer","isView","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","obj","isBuffer","len","checked","numberIsNaN","type","data","fromObject","toPrimitive","assertSize","size","array","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","end","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","base64Write","ucs2Write","units","c","hi","utf16leToBytes","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","mul","readUintBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUint32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readInt8","readInt16LE","readInt16BE","readBigInt64LE","readBigInt64BE","writeUintLE","writeUintBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUint32BE","writeBigUInt64LE","writeBigUInt64BE","limit","sub","writeInt8","writeInt16LE","writeInt16BE","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","code","errors","E","sym","getMessage","Base","writable","configurable","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","base64clean","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","number","isSafeInteger","lengths","assert","bool","hash","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","u32","self","crypto","Uint32Array","createView","DataView","rotr","padStart","toBytes","TextEncoder","Hash","_cloneInto","wrapConstructor","hashConstructor","hashC","update","digest","tmp","SHA2","padOffset","isLE","view","take","process","dataView","roundClean","setBigUint64","_32n","_u32_max","wh","wl","h","l","setUint32","oview","forEach","digestInto","destroy","to","U32_MASK64","fromBig","le","u64","lst","Ah","Al","toBig","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","map","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_256","SHA384","sha512","_0n","_1n","_2n","CU_O","CURVE","freeze","d","P","Gx","Gy","POW_2_256","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","ExtendedPoint","z","t","other","assertExtPoint","X1","Y1","Z1","X2","Y2","Z2","X1Z2","mod","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","G","F","H","X3","Y3","T3","T1","T2","double","negate","W","windows","points","p","base","window","affinePoint","BASE","Point","_WINDOW_SIZE","precomputes","pointPrecomputes","precomputeWindow","normalizeZ","ZERO","f","windowSize","mask","maxNumber","shiftBy","wbits","pr","cached","scalar","wNAF","normalizeScalar","P0","multiplyUnsafe","invZ","invert","ax","ay","zz","legacyRist","toInv","nums","inverted","num","reduceRight","invertBatch","toAffine","toAffineBatch","fromAffine","assertRstPoint","RistrettoPoint","ep","u1","u2","u2sq","invsqrt","invertSqrt","D1","D2","zInv","edIsNegative","_x","_y","numberTo32BytesLE","bytesToHex","toRawBytes","toHex","one","two","subtract","multiply","r0","r","Ns","uvRatio","Ns_D_is_sq","isValid","s_","Nt","s2","W0","W1","W2","W3","hex","r1","bytes255ToNumberLE","ensureBytes","R1","calcElligatorRistrettoMap","r2","R2","emsg","b1","b2","equalBytes","u1_2","u2_2","I","Dx","Dy","WeakMap","delete","isTorsionFree","strict","normed","bytesToNumberLE","y2","u","isXOdd","isLastByteOdd","privateKey","getExtendedPublicKey","point","Signature","assertValidity","u8","fromHex","concatBytes","arrays","every","result","pad","hexes","uint8a","hexToBytes","hexByte","byte","isNaN","numberTo32BytesBE","reverse","_sha512Sync","MAX_255B","modulo","q","gcd","pow2","power","pow_2_252_3","_5n","_10n","_20n","_40n","_80n","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","modlLE","expectedLength","adjustBytes25519","checkPrivateKey","key","getKeyFromHash","hashed","head","prefix","pointBytes","sha512s","utils","getExtendedPublicKeySync","prepareVerification","sig","publicKey","SB","pub","finishVerification","k","kA","sync","getPublicKey","sign","R","verify","_setWindowSize","node","nodeCrypto","web","TORSION_SUBGROUP","hashToPrivateScalar","randomBytes","bytesLength","getRandomValues","randomPrivateKey","subtle","createHash","precompute","sha512Sync","defineProperties","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","s0","s1","sha256","toFailures","run","StructError","failure","failures","rest","path","join","isIterable","isObject","iterator","print","JSON","stringify","shiftIterator","next","done","toFailure","context","struct","branch","refinement","options","coerce","ctx","coercer","schema","valid","validator","entries","ts","Map","Set","refiner","Struct","props","validate","is","tuples","tuple","define","Element","boolean","Class","literal","constant","description","never","nullable","optional","record","Key","Value","Elements","Never","keys","Structs","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","unknown","condition","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","round","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","suffix","enableXOF","rounds","posOut","state","state32","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","keccakP","keccak","finish","bufferOut","writeInto","xofInto","gen","keccak_256","genShake","hashCons","opts","wrapConstructorWithOpts","dkLen","HMAC","_key","iHash","oHash","getPrototypeOf","hmac","_3n","_8n","beta","weistrass","x2","x3","USE_ENDOMORPHISM","ShaError","JacobianPoint","Z1Z1","Z2Z2","U1","U2","S1","S2","x1b","HH","HHH","V","splitScalarEndo","k1neg","k1","k2neg","k2","k1p","k2p","fake","f1p","f2p","iz1","iz2","iz3","scratch","isCompressed","numTo32bStr","hasEvenY","isValidFieldElement","left","Q","aP","bQ","isShort","bytesToNumber","_6n","_11n","_22n","_23n","_44n","_88n","b3","b6","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","sqrtMod","isYOdd","header","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","msgHash","signature","recovery","truncateHash","normalizeSignature","rinv","multiplyAndAddUnsafe","sliceDER","parseDERInt","isWithinCurveOrder","HALF","hasHighS","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toDERRawBytes","toCompactHex","hexToNumber","rBytesLeft","parseDERSignature","fromDER","numTo32b","_sha256Sync","_hmacSha256Sync","divNearest","ENDO","a1","a2","POW_2_128","c1","c2","delta","HmacDrbg","counter","hmacSha256","seed","checkSync","hmacSync","incr","kmdToSig","kBytes","fromCompact","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","finalizeSig","recSig","canonical","der","recovered","normalizeS","toCompactRawBytes","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","messages","importKey","ckey","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tagP","tagH","taggedHashSync","ed25519","generateKeypair","privateScalar","secretKey","isOnCurve","toBuffer","properties","serialize","SOLANA_SCHEMA","deserialize","deserializeUnchecked","PUBLIC_KEY_LENGTH","uniquePublicKeyCounter","PublicKey","_bn","isPublicKeyData","decoded","bs58","BN","eq","toBase58","toArrayLike","zeroPad","fromPublicKey","programId","publicKeyBytes","seeds","createProgramAddressSync","address","nonce","seedsWithNonce","err","findProgramAddressSync","pubkeyData","default","kind","PACKET_DATA_SIZE","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","index","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","pubkey","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","getAlloc","getItemAlloc","item","field","decodeLength","elem","encodeLength","rem_len","TransactionStatus","CompiledKeys","payer","keyMetaMap","getMessageComponents","mapEntries","writableSigners","filter","isSigner","isWritable","readonlySigners","writableNonSigners","readonlyNonSigners","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","extractTableLookup","lookupTable","drainKeysFoundInLookupTable","addresses","keyMeta","isInvoked","writableIndexes","drainedWritableKeys","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","getOrInsertDefault","payerKeyMeta","ix","accountMeta","Message","args","accountKeys","recentBlockhash","indexToProgramIds","account","accounts","getAccountKeys","isAccountSigner","isAccountWritable","numSignedAccounts","isProgramId","has","programIds","nonProgramIds","_","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","transaction","signData","compile","payerKey","accountCount","dataSlice","MessageV0","compiledInstructions","addressTableLookups","lookup","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","tableLookup","tableAccount","find","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","compiledKeys","lookupTableAccounts","extractResult","addressTableLookup","maskedPrefix","splice","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","_message","_json","blockhash","nonceInstruction","signers","items","compileMessage","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","invariant","_compile","pair","serializeMessage","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","minContextSlot","sendTransaction","confirmTransaction","status","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","blob","encodeDecode","bigIntLayout","toBigIntLE","bigInt","toBufferLE","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","params","lamports","space","fromPubkey","newAccountPubkey","basePubkey","toPubkey","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","nonceInitialize","authorized","instructionData","newAuthorizedPubkey","Loader","ceil","chunkSize","program","getMinimumBalanceForRentExemption","balanceNeeded","getAccountInfo","programInfo","executable","allocate","owner","transfer","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","all","objToString","objKeys","isArrayProp","propVal","toStr","returnVal","trailingZeros","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCError","customMessage","globalThis","fetch","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","typeIndex","decodeData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","extractCommitmentFromConfig","commitmentOrConfig","specifiedConfig","createRpcResult","pick","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","version","response","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","source","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","rewardType","GetParsedBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","GetRecentPerformanceSamplesRpcResult","numTransactions","numSlots","samplePeriodSecs","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","Connection","endpoint","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","client","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","confirmTransactionInitialTimeout","putativeUrl","test","assertEndpointUrl","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","makeWebsocketUrl","url","customFetch","fetchWithMiddleware","fetchImpl","info","init","reject","modifiedInfo","modifiedInit","modifiedFetchArgs","clientBrowser","RpcClient","request","callback","method","body","agent","headers","too_many_requests_retries","waitTime","log","statusText","text","ok","createRpcClient","requests","batch","methodName","createRpcBatchRequest","RpcWebSocketClient","autoconnect","max_reconnects","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","_buildArgs","unsafeRes","getBalanceAndContext","then","catch","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","mintAddress","getAccountInfoAndContext","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","configOrCommitment","configWithoutEncoding","strategy","rawSignature","decodedSignature","subscriptionCommitment","confirmationPromise","subscriptionId","onSignature","__type","PROCESSED","expiryPromise","timeoutMs","timeoutId","TIMED_OUT","checkBlockHeight","getBlockHeight","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","race","outcome","clearTimeout","removeSignatureListener","startSlot","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","extra","block","endSlot","transactionDetails","getFirstAvailableBlock","firstAvailableBlock","getConfirmedBlockSignatures","until","getSlot","highestConfirmedRoot","before","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","accountInfo","fromAccountData","getNonceAndContext","disableCache","timeSinceFetch","Date","now","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","MS_PER_SLOT","transactionOrMessage","configOrSigners","includeAccounts","encodedTransaction","originalTx","_blockhashWithExpiryBlockHeight","sigVerify","logTrace","traceIndent","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","close","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","cb","notification","_makeSubscription","subscriptionConfig","clientSubscriptionId","fastStableStringify","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","Keypair","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","recentSlot","lookupTableAddress","bumpSeed","addr","recipient","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","microLamports","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","fromSecretKey","createInstructionWithPublicKey","secp256k1","msgs","ecdsaSign","privKey","drbg","reseedSync","generateSync","publicKeyCreate","fromPrivateKey","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","StakeProgram","Staker","Withdrawer","stakePubkey","lockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","splitInstruction","sourceStakePubKey","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","VoteProgram","Voter","voteInit","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","voteAuthorizeWithSeedArgs","authorizedWithdrawerPubkey","currentVoteAccountBalance","rentExemptMinimum","withdraw","website","details","keybaseUsername","module","inherits","ctor","superCtor","super_","TempCtor","endian","isBN","negative","words","red","_init","wordSize","parseHex4Bits","parseHexByte","lowerBound","parseBase","move","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","w","off","_strip","limbLen","limbPow","imuln","_iaddn","_move","clone","_expand","_normSign","for","zeros","groupSizes","groupBases","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","smallMulTo","ncarry","rword","maxJ","ArrayType","reqLength","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","mid","o","a0","al0","ah0","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","bl3","bh3","bl4","bh4","bl5","bh5","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","andln","modn","egcd","g","isEven","yp","xp","im","isOdd","jm","_invmp","x1","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","minv","ireduce","rlen","imulK","strip","outLen","prev","mod3","nOne","lpow","inv","wnd","currentLen","mont","createChainIdMiddleware","chainId","req","createProviderConfigMiddleware","providerConfig","createConfigMiddleware","mergeMiddleware","createJsonRpcClient","rpcTarget","createFetchMiddleware","networkMiddleware","createGetAccountsMiddleware","_ref","getAccounts","createAsyncMiddleware","_context","createRequestAccountsMiddleware","_ref3","requestAccounts","_context2","createGenericJRPCMiddleware","targetMethod","handler","_context3","createSolanaMiddleware","providerHandlers","signTransaction","signAndSendTransaction","signAllTransactions","signMessage","getPrivateKey","getSecretKey","BaseInjectedProvider","_inherits","_classCallCheck","_super","chainConfig","chainNamespace","CHAIN_NAMESPACES","_createClass","injectedProvider","engine","JRPCEngine","getProviderHandlers","solanaMiddleware","configMiddleware","injectedProviderProxy","getInjectedProviderProxy","provider","providerFromEngine","updateProviderEngineProxy","lookupNetwork","_lookupNetwork","BaseProvider","getBaseProviderHandlers","_requestAccounts","_getAccounts","_getPrivateKey","ethErrors","_getSecretKey","_context5","_context6","display","sigData","_req$params","_req$params2","_context7","_context8","txRes","createInjectedProviderProxyMiddleware","_next","PhantomInjectedProvider","SlopeInjectedProxyProvider","getProviderEngineProxy","_yield$injectedProvid","_yield$injectedProvid2","txMessage","_yield$injectedProvid3","_yield$injectedProvid4","conn","allTxns","unsignedTx","_yield$injectedProvid5","getSlopeHandlers","SolflareInjectedProvider","solflareProviderHandlers","getSolflareHandlers","SolletInjectedProvider","getSolletHandlers","getTorusHandlers","_req$params3","_req$params4","_req$params5","TorusInjectedProvider","handleInjectedProviderUpdate","setupEngine","connectedChainId","connectedHexChainId","isHexStrict","WalletInitializationError","emit","_context4","_this","configure","_objectSpread","setupProvider","_getProviderHandlers","keyPairGenerator","_context9","keyPair","signedMsg","nacl","_providerEngineProxy","txns","_req$params6","_iterator","tx","SolanaPrivateKeyProvider","_enable","_createJsonRpcClient","getChainSwitchMiddleware","getAccountMiddleware","getChainConfig","health","chainSwitchHandlers","addNewChainConfig","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","addChain","ticker","symbol","tickerName","displayName","blockExplorer","switchSolanaChain","switchChain","_ref6","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","_this2","updateAccount","_ref7","createAccountMiddleware","providerFactory","SolanaWallet","_defineProperty","_yield$this$provider$","signedTransaction","signedTransactions","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","reversed","__createBinding","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","fieldName","maybeResize","writeBuffer","writeU32","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","readBuffer","readU32","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","writeFixedArray","writeArray","writeU8","serializeStruct","addToFieldPath","borshSerialize","structSchema","deserializeField","reader","readFixedArray","readArray","readU8","deserializeStruct","classType","borshDeserialize","fieldValue","Writer","Reader","basex","uuid","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","hasCallback","_parseResponse","responseText","parse","isError","_interopRequireDefault","_createClass2","_classCallCheck2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_websocket","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","_isNativeReflectConstruct","Super","NewTarget","Client","_CommonClient","_ref$autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","generate_request_id","_regenerator","_asyncToGenerator2","_typeof2","_eventemitter","__rest","getOwnPropertySymbols","propertyIsEnumerable","CommonClient","_EventEmitter","webSocketFactory","_a","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","socket","timeout","ws_opts","send","promise","_login","mark","_callee","resp","wrap","sent","abrupt","stop","_listMethods","_callee2","_this3","_subscribe","_callee3","event","_x2","_unsubscribe","_callee4","_x3","_this4","addEventListener","listeners","_ref2","reason","EventEmitter","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","listener","Events","EE","once","addListener","emitter","evt","_events","_eventsCount","clearEvent","__proto__","eventNames","events","names","handlers","ee","listenerCount","removeListener","removeAllListeners","prefixed","rnds8","rng","msCrypto","REGEX","byteToHex","rnds","random","inRange","ToDictionary","Stream","tokens","endOfStream","prepend","token","pop","decoderError","opt_code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","temp","input_stream","code_points","cp","codePointsToString","opt_string","stringToCodePoints"],"sourceRoot":""}